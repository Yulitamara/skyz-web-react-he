{"ast":null,"code":"var _jsxFileName = \"C:\\\\skyz-web-react\\\\src\\\\components\\\\common\\\\MasonryPost.js\";\nimport { categoryColors } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MasonryPost = _ref => {\n  let {\n    post,\n    tagsOnTop\n  } = _ref;\n  const windowWidth = window.innerWidth;\n  const imageBackground = {\n    backgroundImage: `url(\"${require(`../../assets/imgs/${post.image}`)}\")`\n  };\n  const style = windowWidth > 900 ? {\n    ...imageBackground,\n    ...post.style\n  } : imageBackground;\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    className: \"masonry-post overlay\",\n    style: style,\n    href: post.link,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-text\",\n      style: {},\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tags-container\",\n        children: post.categories.map((tag, ind) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tag\",\n          style: {\n            backgroundColor: categoryColors[tag]\n          },\n          children: tag.toUpperCase()\n        }, ind, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"image-title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"image-date\",\n          children: post.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = MasonryPost;\nexport default MasonryPost;\nvar _c;\n$RefreshReg$(_c, \"MasonryPost\");","map":{"version":3,"names":["categoryColors","jsxDEV","_jsxDEV","MasonryPost","_ref","post","tagsOnTop","windowWidth","window","innerWidth","imageBackground","backgroundImage","require","image","style","className","href","link","children","categories","map","tag","ind","backgroundColor","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","title","date","_c","$RefreshReg$"],"sources":["C:/skyz-web-react/src/components/common/MasonryPost.js"],"sourcesContent":["import { categoryColors } from \"./styles\";\r\n\r\nconst MasonryPost = ({ post, tagsOnTop }) => {\r\n  const windowWidth = window.innerWidth;\r\n  const imageBackground = {\r\n    backgroundImage: `url(\"${require(`../../assets/imgs/${post.image}`)}\")`,\r\n  };\r\n\r\n  const style =\r\n    windowWidth > 900 ? { ...imageBackground, ...post.style } : imageBackground;\r\n\r\n  return (\r\n    <a className=\"masonry-post overlay\" style={style} href={post.link}>\r\n      <div className=\"image-text\" style={{}}>\r\n        <div className=\"tags-container\">\r\n          {post.categories.map((tag, ind) => (\r\n            <span\r\n              key={ind}\r\n              className=\"tag\"\r\n              style={{ backgroundColor: categoryColors[tag] }}\r\n            >\r\n              {tag.toUpperCase()}\r\n            </span>\r\n          ))}\r\n        </div>\r\n        <div>\r\n          <h2 className=\"image-title\">{post.title}</h2>\r\n          <span className=\"image-date\">{post.date}</span>\r\n        </div>\r\n      </div>\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default MasonryPost;\r\n"],"mappings":";AAAA,SAASA,cAAc,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,GAAGC,IAAA,IAAyB;EAAA,IAAxB;IAAEC,IAAI;IAAEC;EAAU,CAAC,GAAAF,IAAA;EACtC,MAAMG,WAAW,GAAGC,MAAM,CAACC,UAAU;EACrC,MAAMC,eAAe,GAAG;IACtBC,eAAe,EAAG,QAAOC,OAAO,CAAE,qBAAoBP,IAAI,CAACQ,KAAM,EAAC,CAAE;EACtE,CAAC;EAED,MAAMC,KAAK,GACTP,WAAW,GAAG,GAAG,GAAG;IAAE,GAAGG,eAAe;IAAE,GAAGL,IAAI,CAACS;EAAM,CAAC,GAAGJ,eAAe;EAE7E,oBACER,OAAA;IAAGa,SAAS,EAAC,sBAAsB;IAACD,KAAK,EAAEA,KAAM;IAACE,IAAI,EAAEX,IAAI,CAACY,IAAK;IAAAC,QAAA,eAChEhB,OAAA;MAAKa,SAAS,EAAC,YAAY;MAACD,KAAK,EAAE,CAAC,CAAE;MAAAI,QAAA,gBACpChB,OAAA;QAAKa,SAAS,EAAC,gBAAgB;QAAAG,QAAA,EAC5Bb,IAAI,CAACc,UAAU,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBAC5BpB,OAAA;UAEEa,SAAS,EAAC,KAAK;UACfD,KAAK,EAAE;YAAES,eAAe,EAAEvB,cAAc,CAACqB,GAAG;UAAE,CAAE;UAAAH,QAAA,EAE/CG,GAAG,CAACG,WAAW,CAAC;QAAC,GAJbF,GAAG;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKJ,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN1B,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UAAIa,SAAS,EAAC,aAAa;UAAAG,QAAA,EAAEb,IAAI,CAACwB;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7C1B,OAAA;UAAMa,SAAS,EAAC,YAAY;UAAAG,QAAA,EAAEb,IAAI,CAACyB;QAAI;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAER,CAAC;AAACG,EAAA,GA9BI5B,WAAW;AAgCjB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
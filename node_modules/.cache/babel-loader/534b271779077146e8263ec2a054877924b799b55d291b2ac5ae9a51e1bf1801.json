{"ast":null,"code":"var _jsxFileName = \"C:\\\\skyz-web-react-he\\\\src\\\\components\\\\KanbanColumn.js\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport \"../assets/scss/_kanban.scss\";\nimport KanbanTask from \"./KanbanTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanColumn = _ref => {\n  let {\n    columnId,\n    tasks,\n    subtitle,\n    titleClassName\n  } = _ref;\n  const column = tasks.columns[columnId];\n  if (!column) {\n    return null; // Handle the case where the column is not found\n  }\n\n  //   return (\n  //     <div>\n  //       <div className={`title ${titleClassName}`}>\n  //         <h2>{column.title}</h2>\n  //         <span className=\"material-symbols-outlined\">close</span>\n  //       </div>\n  //       <Droppable droppableId={columnId} type=\"TASK\">\n  //         {(provided) => (\n  //           <div\n  //             ref={provided.innerRef}\n  //             {...provided.droppableProps}\n  //             className=\"kanban-column\"\n  //           >\n  //             <h3>{subtitle}</h3>\n  //             <div className=\"kanban-tasks-list\">\n  //               {column.taskIds.map((taskId, index) => (\n  //                 <KanbanTask\n  //                   key={taskId}\n  //                   taskId={taskId}\n  //                   task={tasks.tasks[taskId]}\n  //                   index={index}\n  //                 />\n  //               ))}\n  //             </div>\n  //             {provided.placeholder}\n  //           </div>\n  //         )}\n  //       </Droppable>\n  //     </div>\n  //   );\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `title ${titleClassName}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: column.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined\",\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-container\",\n      children: [1, 2, 3].map(listIndex => /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: `${columnId}-list-${listIndex}`,\n        type: \"TASK\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          className: \"kanban-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"kanban-tasks-list\",\n            children: column.taskIds.filter(taskId => taskId.endsWith(`list-${listIndex}`)).map((taskId, index) => /*#__PURE__*/_jsxDEV(KanbanTask, {\n              taskId: taskId,\n              task: tasks.tasks[taskId],\n              index: index\n            }, taskId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)\n      }, listIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = KanbanColumn;\nexport default KanbanColumn;\nvar _c;\n$RefreshReg$(_c, \"KanbanColumn\");","map":{"version":3,"names":["Droppable","KanbanTask","jsxDEV","_jsxDEV","KanbanColumn","_ref","columnId","tasks","subtitle","titleClassName","column","columns","children","className","title","fileName","_jsxFileName","lineNumber","columnNumber","map","listIndex","droppableId","type","provided","ref","innerRef","droppableProps","taskIds","filter","taskId","endsWith","index","task","placeholder","_c","$RefreshReg$"],"sources":["C:/skyz-web-react-he/src/components/KanbanColumn.js"],"sourcesContent":["import { Droppable } from \"react-beautiful-dnd\";\r\nimport \"../assets/scss/_kanban.scss\";\r\nimport KanbanTask from \"./KanbanTask\";\r\n\r\nconst KanbanColumn = ({ columnId, tasks, subtitle, titleClassName }) => {\r\n  const column = tasks.columns[columnId];\r\n\r\n  if (!column) {\r\n    return null; // Handle the case where the column is not found\r\n  }\r\n\r\n  //   return (\r\n  //     <div>\r\n  //       <div className={`title ${titleClassName}`}>\r\n  //         <h2>{column.title}</h2>\r\n  //         <span className=\"material-symbols-outlined\">close</span>\r\n  //       </div>\r\n  //       <Droppable droppableId={columnId} type=\"TASK\">\r\n  //         {(provided) => (\r\n  //           <div\r\n  //             ref={provided.innerRef}\r\n  //             {...provided.droppableProps}\r\n  //             className=\"kanban-column\"\r\n  //           >\r\n  //             <h3>{subtitle}</h3>\r\n  //             <div className=\"kanban-tasks-list\">\r\n  //               {column.taskIds.map((taskId, index) => (\r\n  //                 <KanbanTask\r\n  //                   key={taskId}\r\n  //                   taskId={taskId}\r\n  //                   task={tasks.tasks[taskId]}\r\n  //                   index={index}\r\n  //                 />\r\n  //               ))}\r\n  //             </div>\r\n  //             {provided.placeholder}\r\n  //           </div>\r\n  //         )}\r\n  //       </Droppable>\r\n  //     </div>\r\n  //   );\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <div className={`title ${titleClassName}`}>\r\n        <h2>{column.title}</h2>\r\n        <span className=\"material-symbols-outlined\">close</span>\r\n      </div>\r\n      <div className=\"kanban-container\">\r\n        {[1, 2, 3].map((listIndex) => (\r\n          <Droppable\r\n            key={listIndex}\r\n            droppableId={`${columnId}-list-${listIndex}`}\r\n            type=\"TASK\"\r\n          >\r\n            {(provided) => (\r\n              <div\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n                className=\"kanban-column\"\r\n              >\r\n                <h3>{subtitle}</h3>\r\n                <div className=\"kanban-tasks-list\">\r\n                  {column.taskIds\r\n                    .filter((taskId) => taskId.endsWith(`list-${listIndex}`))\r\n                    .map((taskId, index) => (\r\n                      <KanbanTask\r\n                        key={taskId}\r\n                        taskId={taskId}\r\n                        task={tasks.tasks[taskId]}\r\n                        index={index}\r\n                      />\r\n                    ))}\r\n                </div>\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanColumn;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
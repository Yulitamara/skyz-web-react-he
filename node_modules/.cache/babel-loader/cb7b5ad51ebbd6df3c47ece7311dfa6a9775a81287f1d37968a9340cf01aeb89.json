{"ast":null,"code":"var _jsxFileName = \"C:\\\\skyz-web-react\\\\src\\\\components\\\\ContactForm.js\";\nimport React from \"react\";\nimport emailjs from \"emailjs-com\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactForm = () => {\n  const sendEmail = e => {\n    e.preventDefault();\n    const contactForm = e.target; // Get the form element\n    const contactName = contactForm.querySelector('input[name=\"user_name\"]');\n    const contactEmail = contactForm.querySelector('input[name=\"user_email\"]');\n    const contactMessage = contactForm.querySelector('textarea[name=\"message\"]');\n    const contactPhone = contactForm.querySelector('input[name=\"phone\"]');\n    const contactOrganization = contactForm.querySelector('input[name=\"organization\"]');\n    const contactError = contactForm.querySelector(\"#contact-error\");\n\n    // Check if the field has a value\n    if (contactName.value === \"\" || contactEmail.value === \"\" || contactMessage.value === \"\" || contactPhone.value === \"\" || contactOrganization.value === \"\") {\n      // Add and remove color\n      contactError.classList.remove(\"color-blue\");\n      contactError.classList.add(\"color-red\");\n\n      // Show message\n      contactError.textContent = \"Write all the input fields ðŸ“¥\";\n    } else {\n      // serviceID - templateID - #form - publickey\n      emailjs.sendForm(\"YOUR_SERVICE_ID\",\n      // Replace with your service ID\n      \"YOUR_TEMPLATE_ID\",\n      // Replace with your template ID\n      \"#contact-form\", \"YOUR_USER_ID\" // Replace with your user ID (public key)\n      ).then(() => {\n        // Show message and add color\n        contactError.classList.add(\"color-blue\");\n        contactError.textContent = \"Message sent âœ…\";\n\n        // Remove message after five seconds\n        setTimeout(() => {\n          contactError.textContent = \"\";\n        }, 5000);\n      }, error => {\n        alert(\"OOPS! SOMETHING HAS FAILED...\", error);\n      });\n\n      // To clear the input field\n      contactName.value = \"\";\n      contactEmail.value = \"\";\n      contactMessage.value = \"\";\n      contactPhone.value = \"\";\n      contactOrganization.value = \"\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    autoComplete: \"off\",\n    className: \"form\",\n    onSubmit: sendEmail,\n    id: \"contact-form\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_c = ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","emailjs","jsxDEV","_jsxDEV","ContactForm","sendEmail","e","preventDefault","contactForm","target","contactName","querySelector","contactEmail","contactMessage","contactPhone","contactOrganization","contactError","value","classList","remove","add","textContent","sendForm","then","setTimeout","error","alert","autoComplete","className","onSubmit","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/skyz-web-react/src/components/ContactForm.js"],"sourcesContent":["import React from \"react\";\r\nimport emailjs from \"emailjs-com\";\r\n\r\nexport const ContactForm = () => {\r\n  const sendEmail = (e) => {\r\n    e.preventDefault();\r\n\r\n    const contactForm = e.target; // Get the form element\r\n    const contactName = contactForm.querySelector('input[name=\"user_name\"]');\r\n    const contactEmail = contactForm.querySelector('input[name=\"user_email\"]');\r\n    const contactMessage = contactForm.querySelector(\r\n      'textarea[name=\"message\"]'\r\n    );\r\n    const contactPhone = contactForm.querySelector('input[name=\"phone\"]');\r\n    const contactOrganization = contactForm.querySelector(\r\n      'input[name=\"organization\"]'\r\n    );\r\n    const contactError = contactForm.querySelector(\"#contact-error\");\r\n\r\n    // Check if the field has a value\r\n    if (\r\n      contactName.value === \"\" ||\r\n      contactEmail.value === \"\" ||\r\n      contactMessage.value === \"\" ||\r\n      contactPhone.value === \"\" ||\r\n      contactOrganization.value === \"\"\r\n    ) {\r\n      // Add and remove color\r\n      contactError.classList.remove(\"color-blue\");\r\n      contactError.classList.add(\"color-red\");\r\n\r\n      // Show message\r\n      contactError.textContent = \"Write all the input fields ðŸ“¥\";\r\n    } else {\r\n      // serviceID - templateID - #form - publickey\r\n      emailjs\r\n        .sendForm(\r\n          \"YOUR_SERVICE_ID\", // Replace with your service ID\r\n          \"YOUR_TEMPLATE_ID\", // Replace with your template ID\r\n          \"#contact-form\",\r\n          \"YOUR_USER_ID\" // Replace with your user ID (public key)\r\n        )\r\n        .then(\r\n          () => {\r\n            // Show message and add color\r\n            contactError.classList.add(\"color-blue\");\r\n            contactError.textContent = \"Message sent âœ…\";\r\n\r\n            // Remove message after five seconds\r\n            setTimeout(() => {\r\n              contactError.textContent = \"\";\r\n            }, 5000);\r\n          },\r\n          (error) => {\r\n            alert(\"OOPS! SOMETHING HAS FAILED...\", error);\r\n          }\r\n        );\r\n\r\n      // To clear the input field\r\n      contactName.value = \"\";\r\n      contactEmail.value = \"\";\r\n      contactMessage.value = \"\";\r\n      contactPhone.value = \"\";\r\n      contactOrganization.value = \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      className=\"form\"\r\n      onSubmit={sendEmail}\r\n      id=\"contact-form\"\r\n    >\r\n      {/* ... Rest of your form JSX ... */}\r\n    </form>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC/B,MAAMC,SAAS,GAAIC,CAAC,IAAK;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,WAAW,GAAGF,CAAC,CAACG,MAAM,CAAC,CAAC;IAC9B,MAAMC,WAAW,GAAGF,WAAW,CAACG,aAAa,CAAC,yBAAyB,CAAC;IACxE,MAAMC,YAAY,GAAGJ,WAAW,CAACG,aAAa,CAAC,0BAA0B,CAAC;IAC1E,MAAME,cAAc,GAAGL,WAAW,CAACG,aAAa,CAC9C,0BACF,CAAC;IACD,MAAMG,YAAY,GAAGN,WAAW,CAACG,aAAa,CAAC,qBAAqB,CAAC;IACrE,MAAMI,mBAAmB,GAAGP,WAAW,CAACG,aAAa,CACnD,4BACF,CAAC;IACD,MAAMK,YAAY,GAAGR,WAAW,CAACG,aAAa,CAAC,gBAAgB,CAAC;;IAEhE;IACA,IACED,WAAW,CAACO,KAAK,KAAK,EAAE,IACxBL,YAAY,CAACK,KAAK,KAAK,EAAE,IACzBJ,cAAc,CAACI,KAAK,KAAK,EAAE,IAC3BH,YAAY,CAACG,KAAK,KAAK,EAAE,IACzBF,mBAAmB,CAACE,KAAK,KAAK,EAAE,EAChC;MACA;MACAD,YAAY,CAACE,SAAS,CAACC,MAAM,CAAC,YAAY,CAAC;MAC3CH,YAAY,CAACE,SAAS,CAACE,GAAG,CAAC,WAAW,CAAC;;MAEvC;MACAJ,YAAY,CAACK,WAAW,GAAG,+BAA+B;IAC5D,CAAC,MAAM;MACL;MACApB,OAAO,CACJqB,QAAQ,CACP,iBAAiB;MAAE;MACnB,kBAAkB;MAAE;MACpB,eAAe,EACf,cAAc,CAAC;MACjB,CAAC,CACAC,IAAI,CACH,MAAM;QACJ;QACAP,YAAY,CAACE,SAAS,CAACE,GAAG,CAAC,YAAY,CAAC;QACxCJ,YAAY,CAACK,WAAW,GAAG,gBAAgB;;QAE3C;QACAG,UAAU,CAAC,MAAM;UACfR,YAAY,CAACK,WAAW,GAAG,EAAE;QAC/B,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,EACAI,KAAK,IAAK;QACTC,KAAK,CAAC,+BAA+B,EAAED,KAAK,CAAC;MAC/C,CACF,CAAC;;MAEH;MACAf,WAAW,CAACO,KAAK,GAAG,EAAE;MACtBL,YAAY,CAACK,KAAK,GAAG,EAAE;MACvBJ,cAAc,CAACI,KAAK,GAAG,EAAE;MACzBH,YAAY,CAACG,KAAK,GAAG,EAAE;MACvBF,mBAAmB,CAACE,KAAK,GAAG,EAAE;IAChC;EACF,CAAC;EAED,oBACEd,OAAA;IACEwB,YAAY,EAAC,KAAK;IAClBC,SAAS,EAAC,MAAM;IAChBC,QAAQ,EAAExB,SAAU;IACpByB,EAAE,EAAC;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGb,CAAC;AAEX,CAAC;AAACC,EAAA,GA1EW/B,WAAW;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
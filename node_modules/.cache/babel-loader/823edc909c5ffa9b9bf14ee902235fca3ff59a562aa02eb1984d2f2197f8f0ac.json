{"ast":null,"code":"var _jsxFileName = \"C:\\\\skyz-web-react-he\\\\src\\\\components\\\\KanbanColumn.js\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport \"../assets/scss/_kanban.scss\";\nimport KanbanTask from \"./KanbanTask\";\n\n// const KanbanColumn = ({ columnId, tasks, subtitle, titleClassName }) => {\n//   const column = tasks.columns[columnId];\n\n//   if (!column) {\n//     return null; // Handle the case where the column is not found\n//   }\n\n//   return (\n//     <div>\n//       <div className={`title ${titleClassName}`}>\n//         <h2>{column.title}</h2>\n//         <span className=\"material-symbols-outlined close-btn\">close</span>\n//       </div>\n//       <Droppable droppableId={columnId} type=\"TASK\">\n//         {(provided) => (\n//           <div\n//             ref={provided.innerRef}\n//             {...provided.droppableProps}\n//             className=\"kanban-column\"\n//           >\n//             <h3>{subtitle}</h3>\n//             <div className=\"kanban-tasks-list\">\n//               {column.taskIds.map((taskId, index) => (\n//                 <KanbanTask\n//                   key={taskId}\n//                   taskId={taskId}\n//                   task={tasks.tasks[taskId]}\n//                   index={index}\n//                 />\n//               ))}\n//             </div>\n//             {provided.placeholder}\n//           </div>\n//         )}\n//       </Droppable>\n//     </div>\n//   );\n// };\n\n// export default KanbanColumn;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanColumn = _ref => {\n  let {\n    columnId,\n    tasks,\n    subtitle,\n    titleClassName\n  } = _ref;\n  const column = tasks.columns[columnId];\n  if (!column) {\n    return null;\n  }\n\n  // const renderTaskList = (taskIds) => (\n  //   <div key={`list-${columnId}`} className=\"kanban-tasks-list\">\n  //     {taskIds.map((taskId, index) => (\n  //       <KanbanTask\n  //         key={taskId}\n  //         taskId={taskId}\n  //         task={tasks.tasks[taskId]}\n  //         index={index}\n  //       />\n  //     ))}\n  //   </div>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `title ${titleClassName}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: column.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined\",\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: columnId,\n      type: \"TASK\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        className: \"kanban-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kanban-tasks-container\",\n          children: [1, 2, 3].map(listNumber => renderTaskList(column.taskIds.slice(3 * (listNumber - 1), 3 * listNumber)))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_c = KanbanColumn;\nexport default KanbanColumn;\nvar _c;\n$RefreshReg$(_c, \"KanbanColumn\");","map":{"version":3,"names":["Droppable","KanbanTask","jsxDEV","_jsxDEV","KanbanColumn","_ref","columnId","tasks","subtitle","titleClassName","column","columns","children","className","title","fileName","_jsxFileName","lineNumber","columnNumber","droppableId","type","provided","ref","innerRef","droppableProps","map","listNumber","renderTaskList","taskIds","slice","placeholder","_c","$RefreshReg$"],"sources":["C:/skyz-web-react-he/src/components/KanbanColumn.js"],"sourcesContent":["import { Droppable } from \"react-beautiful-dnd\";\r\nimport \"../assets/scss/_kanban.scss\";\r\nimport KanbanTask from \"./KanbanTask\";\r\n\r\n// const KanbanColumn = ({ columnId, tasks, subtitle, titleClassName }) => {\r\n//   const column = tasks.columns[columnId];\r\n\r\n//   if (!column) {\r\n//     return null; // Handle the case where the column is not found\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <div className={`title ${titleClassName}`}>\r\n//         <h2>{column.title}</h2>\r\n//         <span className=\"material-symbols-outlined close-btn\">close</span>\r\n//       </div>\r\n//       <Droppable droppableId={columnId} type=\"TASK\">\r\n//         {(provided) => (\r\n//           <div\r\n//             ref={provided.innerRef}\r\n//             {...provided.droppableProps}\r\n//             className=\"kanban-column\"\r\n//           >\r\n//             <h3>{subtitle}</h3>\r\n//             <div className=\"kanban-tasks-list\">\r\n//               {column.taskIds.map((taskId, index) => (\r\n//                 <KanbanTask\r\n//                   key={taskId}\r\n//                   taskId={taskId}\r\n//                   task={tasks.tasks[taskId]}\r\n//                   index={index}\r\n//                 />\r\n//               ))}\r\n//             </div>\r\n//             {provided.placeholder}\r\n//           </div>\r\n//         )}\r\n//       </Droppable>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default KanbanColumn;\r\n\r\nconst KanbanColumn = ({ columnId, tasks, subtitle, titleClassName }) => {\r\n  const column = tasks.columns[columnId];\r\n\r\n  if (!column) {\r\n    return null;\r\n  }\r\n\r\n  // const renderTaskList = (taskIds) => (\r\n  //   <div key={`list-${columnId}`} className=\"kanban-tasks-list\">\r\n  //     {taskIds.map((taskId, index) => (\r\n  //       <KanbanTask\r\n  //         key={taskId}\r\n  //         taskId={taskId}\r\n  //         task={tasks.tasks[taskId]}\r\n  //         index={index}\r\n  //       />\r\n  //     ))}\r\n  //   </div>\r\n  // );\r\n\r\n  return (\r\n    <div>\r\n      <div className={`title ${titleClassName}`}>\r\n        <h2>{column.title}</h2>\r\n        <span className=\"material-symbols-outlined\">close</span>\r\n      </div>\r\n      <Droppable droppableId={columnId} type=\"TASK\">\r\n        {(provided) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            className=\"kanban-column\"\r\n          >\r\n            <h3>{subtitle}</h3>\r\n            <div className=\"kanban-tasks-container\">\r\n              {[1, 2, 3].map((listNumber) =>\r\n                renderTaskList(\r\n                  column.taskIds.slice(3 * (listNumber - 1), 3 * listNumber)\r\n                )\r\n              )}\r\n            </div>\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanColumn;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,OAAO,6BAA6B;AACpC,OAAOC,UAAU,MAAM,cAAc;;AAErC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,YAAY,GAAGC,IAAA,IAAmD;EAAA,IAAlD;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAe,CAAC,GAAAJ,IAAA;EACjE,MAAMK,MAAM,GAAGH,KAAK,CAACI,OAAO,CAACL,QAAQ,CAAC;EAEtC,IAAI,CAACI,MAAM,EAAE;IACX,OAAO,IAAI;EACb;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEP,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAKU,SAAS,EAAG,SAAQJ,cAAe,EAAE;MAAAG,QAAA,gBACxCT,OAAA;QAAAS,QAAA,EAAKF,MAAM,CAACI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvBf,OAAA;QAAMU,SAAS,EAAC,2BAA2B;QAAAD,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eACNf,OAAA,CAACH,SAAS;MAACmB,WAAW,EAAEb,QAAS;MAACc,IAAI,EAAC,MAAM;MAAAR,QAAA,EACzCS,QAAQ,iBACRlB,OAAA;QACEmB,GAAG,EAAED,QAAQ,CAACE,QAAS;QAAA,GACnBF,QAAQ,CAACG,cAAc;QAC3BX,SAAS,EAAC,eAAe;QAAAD,QAAA,gBAEzBT,OAAA;UAAAS,QAAA,EAAKJ;QAAQ;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnBf,OAAA;UAAKU,SAAS,EAAC,wBAAwB;UAAAD,QAAA,EACpC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACa,GAAG,CAAEC,UAAU,IACxBC,cAAc,CACZjB,MAAM,CAACkB,OAAO,CAACC,KAAK,CAAC,CAAC,IAAIH,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,GAAGA,UAAU,CAC3D,CACF;QAAC;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EACLG,QAAQ,CAACS,WAAW;MAAA;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAACa,EAAA,GA/CI3B,YAAY;AAiDlB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
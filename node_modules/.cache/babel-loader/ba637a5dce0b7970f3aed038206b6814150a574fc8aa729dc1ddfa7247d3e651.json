{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { DragDropContext } from \"react-beautiful-dnd\";\n// import \"../assets/scss/_kanban.scss\";\n// import KanbanColumn from \"./KanbanColumn\";\n\n// const Kanban = () => {\n//   const [tasks, setTasks] = useState({\n//     columnId: {\n//       title: \"Column 1\",\n//       taskIds: [\"task1\", \"task2\", \"task3\"],\n//     },\n//     columnId2: {\n//       title: \"Column 2\",\n//       taskIds: [\"task4\", \"task5\", \"task6\"],\n//     },\n//     columnId3: {\n//       title: \"Column 3\",\n//       taskIds: [\"task7\", \"task8\", \"task9\"],\n//     },\n//   });\n\n//   const onDragEnd = (result) => {\n//     const { destination, source, draggableId } = result;\n\n//     if (\n//       !destination ||\n//       (destination.droppableId === source.droppableId &&\n//         destination.index === source.index)\n//     ) {\n//       return;\n//     }\n\n//     const newTasks = { ...tasks };\n//     const sourceColumn = newTasks[source.droppableId];\n//     const destinationColumn = newTasks[destination.droppableId];\n\n//     sourceColumn.taskIds.splice(source.index, 1);\n//     destinationColumn.taskIds.splice(destination.index, 0, draggableId);\n\n//     setTasks(newTasks);\n//   };\n\n//   return (\n//     <DragDropContext onDragEnd={onDragEnd}>\n//       <div className=\"kanban\">\n//         <KanbanColumn columnId=\"columnId\" tasks={tasks} />\n//         <KanbanColumn columnId=\"columnId2\" tasks={tasks} />\n//         <KanbanColumn columnId=\"columnId3\" tasks={tasks} />\n//       </div>\n//     </DragDropContext>\n//   );\n// };\n\n// export default Kanban;","map":{"version":3,"names":[],"sources":["C:/skyz-web-react-he/src/components/Kanban.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { DragDropContext } from \"react-beautiful-dnd\";\r\n// import \"../assets/scss/_kanban.scss\";\r\n// import KanbanColumn from \"./KanbanColumn\";\r\n\r\n// const Kanban = () => {\r\n//   const [tasks, setTasks] = useState({\r\n//     columnId: {\r\n//       title: \"Column 1\",\r\n//       taskIds: [\"task1\", \"task2\", \"task3\"],\r\n//     },\r\n//     columnId2: {\r\n//       title: \"Column 2\",\r\n//       taskIds: [\"task4\", \"task5\", \"task6\"],\r\n//     },\r\n//     columnId3: {\r\n//       title: \"Column 3\",\r\n//       taskIds: [\"task7\", \"task8\", \"task9\"],\r\n//     },\r\n//   });\r\n\r\n//   const onDragEnd = (result) => {\r\n//     const { destination, source, draggableId } = result;\r\n\r\n//     if (\r\n//       !destination ||\r\n//       (destination.droppableId === source.droppableId &&\r\n//         destination.index === source.index)\r\n//     ) {\r\n//       return;\r\n//     }\r\n\r\n//     const newTasks = { ...tasks };\r\n//     const sourceColumn = newTasks[source.droppableId];\r\n//     const destinationColumn = newTasks[destination.droppableId];\r\n\r\n//     sourceColumn.taskIds.splice(source.index, 1);\r\n//     destinationColumn.taskIds.splice(destination.index, 0, draggableId);\r\n\r\n//     setTasks(newTasks);\r\n//   };\r\n\r\n//   return (\r\n//     <DragDropContext onDragEnd={onDragEnd}>\r\n//       <div className=\"kanban\">\r\n//         <KanbanColumn columnId=\"columnId\" tasks={tasks} />\r\n//         <KanbanColumn columnId=\"columnId2\" tasks={tasks} />\r\n//         <KanbanColumn columnId=\"columnId3\" tasks={tasks} />\r\n//       </div>\r\n//     </DragDropContext>\r\n//   );\r\n// };\r\n\r\n// export default Kanban;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
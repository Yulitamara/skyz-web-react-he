{"ast":null,"code":"var _jsxFileName = \"C:\\\\skyz-web-react-he\\\\src\\\\components\\\\Kanban.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { DragDropContext } from \"react-beautiful-dnd\";\n// import \"../assets/scss/_kanban.scss\";\n// import KanbanColumn from \"./KanbanColumn\";\n\n// const Kanban = () => {\n//   const [tasks, setTasks] = useState({\n//     columns: {\n//       columnId: {\n//         title: \"פתוח\",\n//         subtitle: \"פוטנציאלי\",\n//         taskIds: [\"task1\", \"task2\", \"task3\"],\n//       },\n//       columnId2: {\n//         title: \"ביצוע\",\n//         subtitle: \"זכיה\",\n\n//         taskIds: [\"task4\", \"task5\", \"task6\"],\n//       },\n//       columnId3: {\n//         title: \"סגור\",\n//         subtitle: \"בוצע\",\n//         taskIds: [\"task7\", \"task8\", \"task9\"],\n//       },\n//     },\n//     tasks: {\n//       task1: { title: \"פוטנציאלי\", description: \"הזדמנות\" },\n//       task2: { title: \"Task 2\", description: \"Description 2\" },\n//       task3: { title: \"Task 3\", description: \"Description 3\" },\n//       task4: { title: \"Task 4\", description: \"Description 4\" },\n//       task5: { title: \"Task 5\", description: \"Description 5\" },\n//       task6: { title: \"Task 6\", description: \"Description 6\" },\n//       task7: { title: \"Task 7\", description: \"Description 7\" },\n//       task8: { title: \"Task 8\", description: \"Description 8\" },\n//       task9: { title: \"Task 9\", description: \"Description 9\" },\n//     },\n//   });\n\n//   const onDragEnd = (result) => {\n//     const { destination, source, draggableId } = result;\n\n//     if (\n//       !destination ||\n//       (destination.droppableId === source.droppableId &&\n//         destination.index === source.index)\n//     ) {\n//       return;\n//     }\n\n//     const newTasks = { ...tasks };\n//     const sourceColumn = newTasks.columns[source.droppableId];\n//     const destinationColumn = newTasks.columns[destination.droppableId];\n\n//     sourceColumn.taskIds.splice(source.index, 1);\n//     destinationColumn.taskIds.splice(destination.index, 0, draggableId);\n\n//     setTasks(newTasks);\n//   };\n\n//   return (\n//     <DragDropContext onDragEnd={onDragEnd}>\n//       <div className=\"kanban\">\n//         {Object.keys(tasks.columns).map((columnId) => (\n//           <KanbanColumn\n//             key={columnId}\n//             columnId={columnId}\n//             tasks={tasks}\n//             subtitle={tasks.columns[columnId].subtitle}\n//             titleClassName={`title-${columnId}`}\n//           />\n//         ))}\n//       </div>\n//     </DragDropContext>\n//   );\n// };\n\n// export default Kanban;\n\nimport React, { useState } from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport \"../assets/scss/_kanban.scss\";\nimport KanbanColumn from \"./KanbanColumn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Kanban = () => {\n  _s();\n  const [tasks, setTasks] = useState({\n    columns: {\n      columnId: {\n        title: \"פתוח\",\n        subtitle: \"פוטנציאלי\",\n        taskLists: {\n          list1: {\n            taskIds: [\"task1\", \"task2\", \"task3\"]\n          },\n          list2: {\n            taskIds: [\"task10\", \"task11\", \"task12\"]\n          }\n        }\n      },\n      columnId2: {\n        title: \"ביצוע\",\n        subtitle: \"זכיה\",\n        taskLists: {\n          list1: {\n            taskIds: [\"task4\", \"task5\", \"task6\"]\n          }\n        }\n      },\n      columnId3: {\n        title: \"סגור\",\n        subtitle: \"בוצע\",\n        taskLists: {\n          list1: {\n            taskIds: [\"task7\", \"task8\", \"task9\"]\n          }\n        }\n      }\n    },\n    tasks: {\n      task1: {\n        title: \"פוטנציאלי\",\n        description: \"הזדמנות\"\n      },\n      task2: {\n        title: \"Task 2\",\n        description: \"Description 2\"\n      },\n      task3: {\n        title: \"Task 3\",\n        description: \"Description 3\"\n      },\n      task4: {\n        title: \"Task 4\",\n        description: \"Description 4\"\n      },\n      task5: {\n        title: \"Task 5\",\n        description: \"Description 5\"\n      },\n      task6: {\n        title: \"Task 6\",\n        description: \"Description 6\"\n      },\n      task7: {\n        title: \"Task 7\",\n        description: \"Description 7\"\n      },\n      task8: {\n        title: \"Task 8\",\n        description: \"Description 8\"\n      },\n      task9: {\n        title: \"Task 9\",\n        description: \"Description 9\"\n      },\n      task10: {\n        title: \"Task 10\",\n        description: \"Description 10\"\n      },\n      task11: {\n        title: \"Task 11\",\n        description: \"Description 11\"\n      },\n      task12: {\n        title: \"Task 12\",\n        description: \"Description 12\"\n      }\n    }\n  });\n  const onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId,\n      type\n    } = result;\n    if (!destination || isEqual(destination, source)) {\n      return;\n    }\n    const newTasks = {\n      ...tasks\n    };\n    const sourceColumn = newTasks.columns[source.droppableId];\n    const destinationColumn = newTasks.columns[destination.droppableId];\n\n    // Check if the task is moved within the same column\n    if (source.droppableId === destination.droppableId) {\n      const sourceList = sourceColumn.taskLists[source.droppableId];\n      const destinationList = destinationColumn.taskLists[destination.droppableId];\n\n      // Remove the task from the source list\n      sourceList.taskIds.splice(source.index, 1);\n\n      // Insert the task into the destination list at the correct position\n      destinationList.taskIds.splice(destination.index, 0, draggableId);\n    } else {\n      // Move task between different columns and task lists\n      const sourceList = sourceColumn.taskLists[source.droppableId];\n      const destinationList = destinationColumn.taskLists[destination.droppableId];\n\n      // Remove the task from the source list\n      sourceList.taskIds.splice(source.index, 1);\n\n      // Insert the task into the destination list at the correct position\n      destinationList.taskIds.splice(destination.index, 0, draggableId);\n    }\n    setTasks(newTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban\",\n      children: Object.keys(tasks.columns).map(columnId => /*#__PURE__*/_jsxDEV(KanbanColumn, {\n        columnId: columnId,\n        tasks: tasks,\n        titleClassName: `title-${columnId}`\n      }, columnId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(Kanban, \"XHSRW0vjxpGipro5PmG41HeXNHk=\");\n_c = Kanban;\nexport default Kanban;\nvar _c;\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"names":["React","useState","DragDropContext","KanbanColumn","jsxDEV","_jsxDEV","Kanban","_s","tasks","setTasks","columns","columnId","title","subtitle","taskLists","list1","taskIds","list2","columnId2","columnId3","task1","description","task2","task3","task4","task5","task6","task7","task8","task9","task10","task11","task12","onDragEnd","result","destination","source","draggableId","type","isEqual","newTasks","sourceColumn","droppableId","destinationColumn","sourceList","destinationList","splice","index","children","className","Object","keys","map","titleClassName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/skyz-web-react-he/src/components/Kanban.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { DragDropContext } from \"react-beautiful-dnd\";\r\n// import \"../assets/scss/_kanban.scss\";\r\n// import KanbanColumn from \"./KanbanColumn\";\r\n\r\n// const Kanban = () => {\r\n//   const [tasks, setTasks] = useState({\r\n//     columns: {\r\n//       columnId: {\r\n//         title: \"פתוח\",\r\n//         subtitle: \"פוטנציאלי\",\r\n//         taskIds: [\"task1\", \"task2\", \"task3\"],\r\n//       },\r\n//       columnId2: {\r\n//         title: \"ביצוע\",\r\n//         subtitle: \"זכיה\",\r\n\r\n//         taskIds: [\"task4\", \"task5\", \"task6\"],\r\n//       },\r\n//       columnId3: {\r\n//         title: \"סגור\",\r\n//         subtitle: \"בוצע\",\r\n//         taskIds: [\"task7\", \"task8\", \"task9\"],\r\n//       },\r\n//     },\r\n//     tasks: {\r\n//       task1: { title: \"פוטנציאלי\", description: \"הזדמנות\" },\r\n//       task2: { title: \"Task 2\", description: \"Description 2\" },\r\n//       task3: { title: \"Task 3\", description: \"Description 3\" },\r\n//       task4: { title: \"Task 4\", description: \"Description 4\" },\r\n//       task5: { title: \"Task 5\", description: \"Description 5\" },\r\n//       task6: { title: \"Task 6\", description: \"Description 6\" },\r\n//       task7: { title: \"Task 7\", description: \"Description 7\" },\r\n//       task8: { title: \"Task 8\", description: \"Description 8\" },\r\n//       task9: { title: \"Task 9\", description: \"Description 9\" },\r\n//     },\r\n//   });\r\n\r\n//   const onDragEnd = (result) => {\r\n//     const { destination, source, draggableId } = result;\r\n\r\n//     if (\r\n//       !destination ||\r\n//       (destination.droppableId === source.droppableId &&\r\n//         destination.index === source.index)\r\n//     ) {\r\n//       return;\r\n//     }\r\n\r\n//     const newTasks = { ...tasks };\r\n//     const sourceColumn = newTasks.columns[source.droppableId];\r\n//     const destinationColumn = newTasks.columns[destination.droppableId];\r\n\r\n//     sourceColumn.taskIds.splice(source.index, 1);\r\n//     destinationColumn.taskIds.splice(destination.index, 0, draggableId);\r\n\r\n//     setTasks(newTasks);\r\n//   };\r\n\r\n//   return (\r\n//     <DragDropContext onDragEnd={onDragEnd}>\r\n//       <div className=\"kanban\">\r\n//         {Object.keys(tasks.columns).map((columnId) => (\r\n//           <KanbanColumn\r\n//             key={columnId}\r\n//             columnId={columnId}\r\n//             tasks={tasks}\r\n//             subtitle={tasks.columns[columnId].subtitle}\r\n//             titleClassName={`title-${columnId}`}\r\n//           />\r\n//         ))}\r\n//       </div>\r\n//     </DragDropContext>\r\n//   );\r\n// };\r\n\r\n// export default Kanban;\r\n\r\nimport React, { useState } from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport \"../assets/scss/_kanban.scss\";\r\nimport KanbanColumn from \"./KanbanColumn\";\r\n\r\nconst Kanban = () => {\r\n  const [tasks, setTasks] = useState({\r\n    columns: {\r\n      columnId: {\r\n        title: \"פתוח\",\r\n        subtitle: \"פוטנציאלי\",\r\n        taskLists: {\r\n          list1: { taskIds: [\"task1\", \"task2\", \"task3\"] },\r\n          list2: { taskIds: [\"task10\", \"task11\", \"task12\"] },\r\n        },\r\n      },\r\n      columnId2: {\r\n        title: \"ביצוע\",\r\n        subtitle: \"זכיה\",\r\n        taskLists: {\r\n          list1: { taskIds: [\"task4\", \"task5\", \"task6\"] },\r\n        },\r\n      },\r\n      columnId3: {\r\n        title: \"סגור\",\r\n        subtitle: \"בוצע\",\r\n        taskLists: {\r\n          list1: { taskIds: [\"task7\", \"task8\", \"task9\"] },\r\n        },\r\n      },\r\n    },\r\n    tasks: {\r\n      task1: { title: \"פוטנציאלי\", description: \"הזדמנות\" },\r\n      task2: { title: \"Task 2\", description: \"Description 2\" },\r\n      task3: { title: \"Task 3\", description: \"Description 3\" },\r\n      task4: { title: \"Task 4\", description: \"Description 4\" },\r\n      task5: { title: \"Task 5\", description: \"Description 5\" },\r\n      task6: { title: \"Task 6\", description: \"Description 6\" },\r\n      task7: { title: \"Task 7\", description: \"Description 7\" },\r\n      task8: { title: \"Task 8\", description: \"Description 8\" },\r\n      task9: { title: \"Task 9\", description: \"Description 9\" },\r\n      task10: { title: \"Task 10\", description: \"Description 10\" },\r\n      task11: { title: \"Task 11\", description: \"Description 11\" },\r\n      task12: { title: \"Task 12\", description: \"Description 12\" },\r\n    },\r\n  });\r\n\r\nconst onDragEnd = (result) => {\r\n  const { destination, source, draggableId, type } = result;\r\n\r\n  if (!destination || isEqual(destination, source)) {\r\n    return;\r\n  }\r\n\r\n  const newTasks = { ...tasks };\r\n  const sourceColumn = newTasks.columns[source.droppableId];\r\n  const destinationColumn = newTasks.columns[destination.droppableId];\r\n\r\n  // Check if the task is moved within the same column\r\n  if (source.droppableId === destination.droppableId) {\r\n    const sourceList = sourceColumn.taskLists[source.droppableId];\r\n    const destinationList =\r\n      destinationColumn.taskLists[destination.droppableId];\r\n\r\n    // Remove the task from the source list\r\n    sourceList.taskIds.splice(source.index, 1);\r\n\r\n    // Insert the task into the destination list at the correct position\r\n    destinationList.taskIds.splice(destination.index, 0, draggableId);\r\n  } else {\r\n    // Move task between different columns and task lists\r\n    const sourceList = sourceColumn.taskLists[source.droppableId];\r\n    const destinationList =\r\n      destinationColumn.taskLists[destination.droppableId];\r\n\r\n    // Remove the task from the source list\r\n    sourceList.taskIds.splice(source.index, 1);\r\n\r\n    // Insert the task into the destination list at the correct position\r\n    destinationList.taskIds.splice(destination.index, 0, draggableId);\r\n  }\r\n\r\n  setTasks(newTasks);\r\n};\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div className=\"kanban\">\r\n        {Object.keys(tasks.columns).map((columnId) => (\r\n          <KanbanColumn\r\n            key={columnId}\r\n            columnId={columnId}\r\n            tasks={tasks}\r\n            titleClassName={`title-${columnId}`}\r\n          />\r\n        ))}\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default Kanban;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
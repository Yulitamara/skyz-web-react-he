{"ast":null,"code":"var _jsxFileName = \"C:\\\\skyz-web-react-he\\\\src\\\\components\\\\Kanban.js\";\n// // Kanban.js\n// import React, { useState } from \"react\";\n// import { DragDropContext } from \"react-beautiful-dnd\";\n// import \"../assets/scss/_kanban.scss\";\n// import KanbanColumn from \"./KanbanColumn\";\n\n// const Kanban = ({ data }) => {\n//   const [columnsData, setColumnsData] = useState({\n//     open: [\n//       {\n//         id: \"task-1\",\n//         title: \"Task 1\",\n//         description: \"Description for Task 1\",\n//         assignedTo: \"User A\",\n//         category: \"todo\",\n//       },\n//       {\n//         id: \"task-2\",\n//         title: \"Task 2\",\n//         description: \"Description for Task 2\",\n//         assignedTo: \"User B\",\n//         category: \"inProgress\",\n//       },\n//       {\n//         id: \"task-3\",\n//         title: \"Task 3\",\n//         description: \"Description for Task 3\",\n//         assignedTo: \"User C\",\n//         category: \"done\",\n//       },\n//       // ... other tasks\n//     ],\n//     ongoing: [\n//       // ... tasks for \"Ongoing\" column\n//     ],\n//     close: [\n//       // ... tasks for \"Close\" column\n//     ],\n//   });\n\n//   const onDragEnd = (result) => {\n//     const { destination, source, draggableId } = result;\n\n//     if (\n//       !destination ||\n//       (destination.droppableId === source.droppableId &&\n//         destination.index === source.index)\n//     ) {\n//       return;\n//     }\n\n//     const sourceTasks = [...columnsData[source.droppableId]];\n//     const destinationTasks = [...columnsData[destination.droppableId]];\n\n//     const draggedTask = sourceTasks.find((task) => task.id === draggableId);\n\n//     if (!draggedTask) {\n//       console.error(`Task with id ${draggableId} not found in source column.`);\n//       return;\n//     }\n\n//     if (destination.droppableId !== source.droppableId) {\n//       sourceTasks.splice(source.index, 1);\n//       destinationTasks.splice(destination.index, 0, draggedTask);\n\n//       setColumnsData((prevColumnsData) => ({\n//         ...prevColumnsData,\n//         [source.droppableId]: sourceTasks,\n//         [destination.droppableId]: destinationTasks,\n//       }));\n//     } else {\n//       sourceTasks.splice(source.index, 1);\n//       sourceTasks.splice(destination.index, 0, draggedTask);\n\n//       setColumnsData((prevColumnsData) => ({\n//         ...prevColumnsData,\n//         [source.droppableId]: sourceTasks,\n//       }));\n//     }\n//   };\n\n//   return (\n//     <DragDropContext onDragEnd={onDragEnd}>\n//       <div className=\"kanban\">\n//         <KanbanColumn id=\"open\" tasks={columnsData.open} />\n//         <KanbanColumn id=\"ongoing\" tasks={columnsData.ongoing} />\n//         <KanbanColumn id=\"close\" tasks={columnsData.close} />\n//       </div>\n//     </DragDropContext>\n//   );\n// };\n\n// export default Kanban;\n\n// Kanban.js\nimport React from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport KanbanColumn from \"./KanbanColumn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Kanban = _ref => {\n  let {\n    columnsData,\n    onDragEnd\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban\",\n      children: [/*#__PURE__*/_jsxDEV(KanbanColumn, {\n        id: \"open\",\n        tasks: columnsData.open\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KanbanColumn, {\n        id: \"ongoing\",\n        tasks: columnsData.ongoing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KanbanColumn, {\n        id: \"close\",\n        tasks: columnsData.close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_c = Kanban;\nexport default Kanban;\nvar _c;\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"names":["React","DragDropContext","KanbanColumn","jsxDEV","_jsxDEV","Kanban","_ref","columnsData","onDragEnd","children","className","id","tasks","open","fileName","_jsxFileName","lineNumber","columnNumber","ongoing","close","_c","$RefreshReg$"],"sources":["C:/skyz-web-react-he/src/components/Kanban.js"],"sourcesContent":["// // Kanban.js\r\n// import React, { useState } from \"react\";\r\n// import { DragDropContext } from \"react-beautiful-dnd\";\r\n// import \"../assets/scss/_kanban.scss\";\r\n// import KanbanColumn from \"./KanbanColumn\";\r\n\r\n// const Kanban = ({ data }) => {\r\n//   const [columnsData, setColumnsData] = useState({\r\n//     open: [\r\n//       {\r\n//         id: \"task-1\",\r\n//         title: \"Task 1\",\r\n//         description: \"Description for Task 1\",\r\n//         assignedTo: \"User A\",\r\n//         category: \"todo\",\r\n//       },\r\n//       {\r\n//         id: \"task-2\",\r\n//         title: \"Task 2\",\r\n//         description: \"Description for Task 2\",\r\n//         assignedTo: \"User B\",\r\n//         category: \"inProgress\",\r\n//       },\r\n//       {\r\n//         id: \"task-3\",\r\n//         title: \"Task 3\",\r\n//         description: \"Description for Task 3\",\r\n//         assignedTo: \"User C\",\r\n//         category: \"done\",\r\n//       },\r\n//       // ... other tasks\r\n//     ],\r\n//     ongoing: [\r\n//       // ... tasks for \"Ongoing\" column\r\n//     ],\r\n//     close: [\r\n//       // ... tasks for \"Close\" column\r\n//     ],\r\n//   });\r\n\r\n//   const onDragEnd = (result) => {\r\n//     const { destination, source, draggableId } = result;\r\n\r\n//     if (\r\n//       !destination ||\r\n//       (destination.droppableId === source.droppableId &&\r\n//         destination.index === source.index)\r\n//     ) {\r\n//       return;\r\n//     }\r\n\r\n//     const sourceTasks = [...columnsData[source.droppableId]];\r\n//     const destinationTasks = [...columnsData[destination.droppableId]];\r\n\r\n//     const draggedTask = sourceTasks.find((task) => task.id === draggableId);\r\n\r\n//     if (!draggedTask) {\r\n//       console.error(`Task with id ${draggableId} not found in source column.`);\r\n//       return;\r\n//     }\r\n\r\n//     if (destination.droppableId !== source.droppableId) {\r\n//       sourceTasks.splice(source.index, 1);\r\n//       destinationTasks.splice(destination.index, 0, draggedTask);\r\n\r\n//       setColumnsData((prevColumnsData) => ({\r\n//         ...prevColumnsData,\r\n//         [source.droppableId]: sourceTasks,\r\n//         [destination.droppableId]: destinationTasks,\r\n//       }));\r\n//     } else {\r\n//       sourceTasks.splice(source.index, 1);\r\n//       sourceTasks.splice(destination.index, 0, draggedTask);\r\n\r\n//       setColumnsData((prevColumnsData) => ({\r\n//         ...prevColumnsData,\r\n//         [source.droppableId]: sourceTasks,\r\n//       }));\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <DragDropContext onDragEnd={onDragEnd}>\r\n//       <div className=\"kanban\">\r\n//         <KanbanColumn id=\"open\" tasks={columnsData.open} />\r\n//         <KanbanColumn id=\"ongoing\" tasks={columnsData.ongoing} />\r\n//         <KanbanColumn id=\"close\" tasks={columnsData.close} />\r\n//       </div>\r\n//     </DragDropContext>\r\n//   );\r\n// };\r\n\r\n// export default Kanban;\r\n\r\n// Kanban.js\r\nimport React from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport KanbanColumn from \"./KanbanColumn\";\r\n\r\nconst Kanban = ({ columnsData, onDragEnd }) => {\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div className=\"kanban\">\r\n        <KanbanColumn id=\"open\" tasks={columnsData.open} />\r\n        <KanbanColumn id=\"ongoing\" tasks={columnsData.ongoing} />\r\n        <KanbanColumn id=\"close\" tasks={columnsData.close} />\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default Kanban;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,qBAAqB;AACrD,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,MAAM,GAAGC,IAAA,IAAgC;EAAA,IAA/B;IAAEC,WAAW;IAAEC;EAAU,CAAC,GAAAF,IAAA;EACxC,oBACEF,OAAA,CAACH,eAAe;IAACO,SAAS,EAAEA,SAAU;IAAAC,QAAA,eACpCL,OAAA;MAAKM,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACrBL,OAAA,CAACF,YAAY;QAACS,EAAE,EAAC,MAAM;QAACC,KAAK,EAAEL,WAAW,CAACM;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnDb,OAAA,CAACF,YAAY;QAACS,EAAE,EAAC,SAAS;QAACC,KAAK,EAAEL,WAAW,CAACW;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzDb,OAAA,CAACF,YAAY;QAACS,EAAE,EAAC,OAAO;QAACC,KAAK,EAAEL,WAAW,CAACY;MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEtB,CAAC;AAACG,EAAA,GAVIf,MAAM;AAYZ,eAAeA,MAAM;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
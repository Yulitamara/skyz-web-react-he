{"ast":null,"code":"import { append, createElement, EventHandler, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { TreeView } from '@syncfusion/ej2-navigations';\nimport { Popup } from '@syncfusion/ej2-popups';\nimport * as events from './constant';\nimport * as cls from './css-constant';\n/**\n * Kanban mobile layout rendering module\n *\n */\nvar MobileLayout = /** @class */function () {\n  function MobileLayout(parent) {\n    this.parent = parent;\n  }\n  MobileLayout.prototype.renderSwimlaneHeader = function () {\n    var toolbarWrapper = createElement('div', {\n      className: cls.SWIMLANE_HEADER_CLASS,\n      innerHTML: '<div class=\"' + cls.SWIMLANE_HEADER_TOOLBAR_CLASS + '\"><div class=\"' + cls.TOOLBAR_MENU_CLASS + '\"><div class=\"e-icons ' + cls.TOOLBAR_MENU_ICON_CLASS + '\"></div></div><div class=\"' + cls.TOOLBAR_LEVEL_TITLE_CLASS + '\"><div class=\"' + cls.TOOLBAR_SWIMLANE_NAME_CLASS + '\"></div></div></div>'\n    });\n    this.parent.element.appendChild(toolbarWrapper);\n    EventHandler.add(toolbarWrapper.querySelector('.' + cls.TOOLBAR_MENU_ICON_CLASS), 'click', this.menuClick, this);\n  };\n  MobileLayout.prototype.renderSwimlaneTree = function () {\n    var height = this.parent.element.querySelector('.' + cls.SWIMLANE_HEADER_CLASS).offsetHeight;\n    var treeHeight = window.innerHeight - height;\n    this.popupOverlay = createElement('div', {\n      className: cls.SWIMLANE_OVERLAY_CLASS,\n      styles: 'height: ' + treeHeight + 'px;'\n    });\n    var wrapper = createElement('div', {\n      className: cls.SWIMLANE_CONTENT_CLASS,\n      styles: 'top:' + height + 'px;'\n    });\n    var treeWrapper = createElement('div', {\n      className: cls.SWIMLANE_RESOURCE_CLASS + ' e-popup-close',\n      styles: 'height: ' + treeHeight + 'px;'\n    });\n    wrapper.appendChild(treeWrapper);\n    wrapper.appendChild(this.popupOverlay);\n    this.parent.element.appendChild(wrapper);\n    var swimlaneTree = createElement('div', {\n      className: cls.SWIMLANE_TREE_CLASS\n    });\n    treeWrapper.appendChild(swimlaneTree);\n    this.treeViewObj = new TreeView({\n      cssClass: this.parent.cssClass,\n      enableRtl: this.parent.enableRtl,\n      fields: {\n        dataSource: this.parent.layoutModule.kanbanRows,\n        id: 'keyField',\n        text: 'textField'\n      },\n      nodeTemplate: this.parent.swimlaneSettings.template,\n      nodeClicked: this.treeSwimlaneClick.bind(this),\n      drawNode: this.drawNode.bind(this)\n    });\n    this.treeViewObj.appendTo(swimlaneTree);\n    var popupObj = {\n      targetType: 'relative',\n      actionOnScroll: 'none',\n      enableRtl: this.parent.enableRtl,\n      zIndex: 10,\n      hideAnimation: {\n        name: 'SlideLeftOut',\n        duration: 500\n      },\n      showAnimation: {\n        name: 'SlideLeftIn',\n        duration: 500\n      },\n      viewPortElement: this.parent.element.querySelector('.' + cls.CONTENT_CLASS)\n    };\n    popupObj.content = this.treeViewObj.element;\n    this.treePopup = new Popup(treeWrapper, popupObj);\n  };\n  MobileLayout.prototype.menuClick = function () {\n    if (this.parent.element.querySelector('.' + cls.SWIMLANE_RESOURCE_CLASS).classList.contains('e-popup-open')) {\n      this.treePopup.hide();\n      removeClass([this.popupOverlay], 'e-enable');\n    } else {\n      var treeNodes = [].slice.call(this.treeViewObj.element.querySelectorAll('.e-list-item'));\n      removeClass(treeNodes, 'e-active');\n      addClass([treeNodes[this.parent.layoutModule.swimlaneIndex]], 'e-active');\n      this.treePopup.show();\n      addClass([this.popupOverlay], 'e-enable');\n    }\n  };\n  MobileLayout.prototype.treeSwimlaneClick = function (args) {\n    this.treePopup.hide();\n    var treeNodes = [].slice.call(this.treeViewObj.element.querySelectorAll('.e-list-item'));\n    this.parent.layoutModule.swimlaneIndex = treeNodes.indexOf(args.node);\n    this.parent.layoutModule.scrollLeft = 0;\n    this.parent.notify(events.dataReady, {\n      processedData: this.parent.kanbanData\n    });\n    args.event.preventDefault();\n  };\n  MobileLayout.prototype.hidePopup = function () {\n    this.treePopup.hide();\n    removeClass([this.popupOverlay], 'e-enable');\n  };\n  MobileLayout.prototype.getWidth = function () {\n    return window.innerWidth * 80 / 100;\n  };\n  MobileLayout.prototype.drawNode = function (args) {\n    if (this.parent.swimlaneSettings.template && this.parent.isReact) {\n      var templateId = this.parent.element.id + '_treeviewTemplate';\n      var treeViewTemplate = this.parent.templateParser(this.parent.swimlaneSettings.template)(args.nodeData, this.parent, 'nodeTemplate', templateId, false);\n      append(treeViewTemplate, args.node.querySelector('.e-list-text'));\n    }\n  };\n  return MobileLayout;\n}();\nexport { MobileLayout };","map":{"version":3,"names":["append","createElement","EventHandler","addClass","removeClass","TreeView","Popup","events","cls","MobileLayout","parent","prototype","renderSwimlaneHeader","toolbarWrapper","className","SWIMLANE_HEADER_CLASS","innerHTML","SWIMLANE_HEADER_TOOLBAR_CLASS","TOOLBAR_MENU_CLASS","TOOLBAR_MENU_ICON_CLASS","TOOLBAR_LEVEL_TITLE_CLASS","TOOLBAR_SWIMLANE_NAME_CLASS","element","appendChild","add","querySelector","menuClick","renderSwimlaneTree","height","offsetHeight","treeHeight","window","innerHeight","popupOverlay","SWIMLANE_OVERLAY_CLASS","styles","wrapper","SWIMLANE_CONTENT_CLASS","treeWrapper","SWIMLANE_RESOURCE_CLASS","swimlaneTree","SWIMLANE_TREE_CLASS","treeViewObj","cssClass","enableRtl","fields","dataSource","layoutModule","kanbanRows","id","text","nodeTemplate","swimlaneSettings","template","nodeClicked","treeSwimlaneClick","bind","drawNode","appendTo","popupObj","targetType","actionOnScroll","zIndex","hideAnimation","name","duration","showAnimation","viewPortElement","CONTENT_CLASS","content","treePopup","classList","contains","hide","treeNodes","slice","call","querySelectorAll","swimlaneIndex","show","args","indexOf","node","scrollLeft","notify","dataReady","processedData","kanbanData","event","preventDefault","hidePopup","getWidth","innerWidth","isReact","templateId","treeViewTemplate","templateParser","nodeData"],"sources":["C:/skyz-web-react-he/node_modules/@syncfusion/ej2-kanban/src/kanban/base/mobile-layout.js"],"sourcesContent":["import { append, createElement, EventHandler, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { TreeView } from '@syncfusion/ej2-navigations';\nimport { Popup } from '@syncfusion/ej2-popups';\nimport * as events from './constant';\nimport * as cls from './css-constant';\n/**\n * Kanban mobile layout rendering module\n *\n */\nvar MobileLayout = /** @class */ (function () {\n    function MobileLayout(parent) {\n        this.parent = parent;\n    }\n    MobileLayout.prototype.renderSwimlaneHeader = function () {\n        var toolbarWrapper = createElement('div', {\n            className: cls.SWIMLANE_HEADER_CLASS,\n            innerHTML: '<div class=\"' + cls.SWIMLANE_HEADER_TOOLBAR_CLASS + '\"><div class=\"' + cls.TOOLBAR_MENU_CLASS +\n                '\"><div class=\"e-icons ' + cls.TOOLBAR_MENU_ICON_CLASS + '\"></div></div><div class=\"' + cls.TOOLBAR_LEVEL_TITLE_CLASS +\n                '\"><div class=\"' + cls.TOOLBAR_SWIMLANE_NAME_CLASS + '\"></div></div></div>'\n        });\n        this.parent.element.appendChild(toolbarWrapper);\n        EventHandler.add(toolbarWrapper.querySelector('.' + cls.TOOLBAR_MENU_ICON_CLASS), 'click', this.menuClick, this);\n    };\n    MobileLayout.prototype.renderSwimlaneTree = function () {\n        var height = this.parent.element.querySelector('.' + cls.SWIMLANE_HEADER_CLASS).offsetHeight;\n        var treeHeight = window.innerHeight - height;\n        this.popupOverlay = createElement('div', { className: cls.SWIMLANE_OVERLAY_CLASS, styles: 'height: ' + treeHeight + 'px;' });\n        var wrapper = createElement('div', { className: cls.SWIMLANE_CONTENT_CLASS, styles: 'top:' + height + 'px;' });\n        var treeWrapper = createElement('div', {\n            className: cls.SWIMLANE_RESOURCE_CLASS + ' e-popup-close', styles: 'height: ' + treeHeight + 'px;'\n        });\n        wrapper.appendChild(treeWrapper);\n        wrapper.appendChild(this.popupOverlay);\n        this.parent.element.appendChild(wrapper);\n        var swimlaneTree = createElement('div', { className: cls.SWIMLANE_TREE_CLASS });\n        treeWrapper.appendChild(swimlaneTree);\n        this.treeViewObj = new TreeView({\n            cssClass: this.parent.cssClass,\n            enableRtl: this.parent.enableRtl,\n            fields: {\n                dataSource: this.parent.layoutModule.kanbanRows,\n                id: 'keyField',\n                text: 'textField'\n            },\n            nodeTemplate: this.parent.swimlaneSettings.template,\n            nodeClicked: this.treeSwimlaneClick.bind(this),\n            drawNode: this.drawNode.bind(this),\n        });\n        this.treeViewObj.appendTo(swimlaneTree);\n        var popupObj = {\n            targetType: 'relative',\n            actionOnScroll: 'none',\n            enableRtl: this.parent.enableRtl,\n            zIndex: 10,\n            hideAnimation: { name: 'SlideLeftOut', duration: 500 },\n            showAnimation: { name: 'SlideLeftIn', duration: 500 },\n            viewPortElement: this.parent.element.querySelector('.' + cls.CONTENT_CLASS)\n        };\n        popupObj.content = this.treeViewObj.element;\n        this.treePopup = new Popup(treeWrapper, popupObj);\n    };\n    MobileLayout.prototype.menuClick = function () {\n        if (this.parent.element.querySelector('.' + cls.SWIMLANE_RESOURCE_CLASS).classList.contains('e-popup-open')) {\n            this.treePopup.hide();\n            removeClass([this.popupOverlay], 'e-enable');\n        }\n        else {\n            var treeNodes = [].slice.call(this.treeViewObj.element.querySelectorAll('.e-list-item'));\n            removeClass(treeNodes, 'e-active');\n            addClass([treeNodes[this.parent.layoutModule.swimlaneIndex]], 'e-active');\n            this.treePopup.show();\n            addClass([this.popupOverlay], 'e-enable');\n        }\n    };\n    MobileLayout.prototype.treeSwimlaneClick = function (args) {\n        this.treePopup.hide();\n        var treeNodes = [].slice.call(this.treeViewObj.element.querySelectorAll('.e-list-item'));\n        this.parent.layoutModule.swimlaneIndex = treeNodes.indexOf(args.node);\n        this.parent.layoutModule.scrollLeft = 0;\n        this.parent.notify(events.dataReady, { processedData: this.parent.kanbanData });\n        args.event.preventDefault();\n    };\n    MobileLayout.prototype.hidePopup = function () {\n        this.treePopup.hide();\n        removeClass([this.popupOverlay], 'e-enable');\n    };\n    MobileLayout.prototype.getWidth = function () {\n        return (window.innerWidth * 80) / 100;\n    };\n    MobileLayout.prototype.drawNode = function (args) {\n        if (this.parent.swimlaneSettings.template && this.parent.isReact) {\n            var templateId = this.parent.element.id + '_treeviewTemplate';\n            var treeViewTemplate = this.parent.templateParser(this.parent.swimlaneSettings.template)(args.nodeData, this.parent, 'nodeTemplate', templateId, false);\n            append(treeViewTemplate, args.node.querySelector('.e-list-text'));\n        }\n    };\n    return MobileLayout;\n}());\nexport { MobileLayout };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\skyz-web-react-he\\\\src\\\\components\\\\KanbanColumn.js\",\n  _s = $RefreshSig$();\n// import { Droppable } from \"react-beautiful-dnd\";\n// import \"../assets/scss/_kanban.scss\";\n// import KanbanTask from \"./KanbanTask\";\n\n// const KanbanColumn = ({ columnId, tasks, subtitle, titleClassName }) => {\n//   const column = tasks.columns[columnId];\n\n//   if (!column) {\n//     return null;\n//   }\n\n//   return (\n//     <div>\n\n//       <Droppable droppableId={columnId} type=\"TASK\">\n//         {(provided) => (\n//           <div\n//             ref={provided.innerRef}\n//             {...provided.droppableProps}\n//             className=\"kanban-column\"\n//           >\n//             <h3>{subtitle}</h3>\n//             <div className=\"kanban-tasks-list\">\n//               {column.taskIds.map((taskId, index) => (\n//                 <KanbanTask\n//                   key={taskId}\n//                   taskId={taskId}\n//                   task={tasks.tasks[taskId]}\n//                   index={index}\n//                 />\n//               ))}\n//             </div>\n//             {provided.placeholder}\n//           </div>\n//         )}\n//       </Droppable>\n//     </div>\n//   );\n// };\n\n// export default KanbanColumn;\n\n// KanbanColumn.jsx\nimport React, { useState } from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport \"../assets/scss/_kanban.scss\";\nimport KanbanTask from \"./KanbanTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanColumn = _ref => {\n  _s();\n  let {\n    columnId,\n    tasks,\n    subtitle,\n    titleClassName\n  } = _ref;\n  const column = tasks.columns[columnId];\n  const [isMinimized, setIsMinimized] = useState(false);\n  const toggleMinimize = () => {\n    setIsMinimized(!isMinimized);\n  };\n  if (!column) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `title ${titleClassName}`,\n      onClick: toggleMinimize,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: column.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined close-btn\",\n        children: isMinimized ? \"expand_more\" : \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), !isMinimized && /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: columnId,\n      type: \"TASK\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        className: \"kanban-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kanban-tasks-list\",\n          children: column.taskIds.map((taskId, index) => /*#__PURE__*/_jsxDEV(KanbanTask, {\n            taskId: taskId,\n            task: tasks.tasks[taskId],\n            index: index\n          }, taskId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(KanbanColumn, \"WDDr9N9svgr925HyZsa4WaF1zrg=\");\n_c = KanbanColumn;\nexport default KanbanColumn;\nvar _c;\n$RefreshReg$(_c, \"KanbanColumn\");","map":{"version":3,"names":["React","useState","Droppable","KanbanTask","jsxDEV","_jsxDEV","KanbanColumn","_ref","_s","columnId","tasks","subtitle","titleClassName","column","columns","isMinimized","setIsMinimized","toggleMinimize","children","className","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","droppableId","type","provided","ref","innerRef","droppableProps","taskIds","map","taskId","index","task","placeholder","_c","$RefreshReg$"],"sources":["C:/skyz-web-react-he/src/components/KanbanColumn.js"],"sourcesContent":["// import { Droppable } from \"react-beautiful-dnd\";\r\n// import \"../assets/scss/_kanban.scss\";\r\n// import KanbanTask from \"./KanbanTask\";\r\n\r\n// const KanbanColumn = ({ columnId, tasks, subtitle, titleClassName }) => {\r\n//   const column = tasks.columns[columnId];\r\n\r\n//   if (!column) {\r\n//     return null;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n\r\n//       <Droppable droppableId={columnId} type=\"TASK\">\r\n//         {(provided) => (\r\n//           <div\r\n//             ref={provided.innerRef}\r\n//             {...provided.droppableProps}\r\n//             className=\"kanban-column\"\r\n//           >\r\n//             <h3>{subtitle}</h3>\r\n//             <div className=\"kanban-tasks-list\">\r\n//               {column.taskIds.map((taskId, index) => (\r\n//                 <KanbanTask\r\n//                   key={taskId}\r\n//                   taskId={taskId}\r\n//                   task={tasks.tasks[taskId]}\r\n//                   index={index}\r\n//                 />\r\n//               ))}\r\n//             </div>\r\n//             {provided.placeholder}\r\n//           </div>\r\n//         )}\r\n//       </Droppable>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default KanbanColumn;\r\n\r\n// KanbanColumn.jsx\r\nimport React, { useState } from \"react\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport \"../assets/scss/_kanban.scss\";\r\nimport KanbanTask from \"./KanbanTask\";\r\n\r\nconst KanbanColumn = ({ columnId, tasks, subtitle, titleClassName }) => {\r\n  const column = tasks.columns[columnId];\r\n  const [isMinimized, setIsMinimized] = useState(false);\r\n\r\n  const toggleMinimize = () => {\r\n    setIsMinimized(!isMinimized);\r\n  };\r\n\r\n  if (!column) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={`title ${titleClassName}`} onClick={toggleMinimize}>\r\n        <h2>{column.title}</h2>\r\n        <span className=\"material-symbols-outlined close-btn\">\r\n          {isMinimized ? \"expand_more\" : \"close\"}\r\n        </span>\r\n      </div>\r\n      {!isMinimized && (\r\n        <Droppable droppableId={columnId} type=\"TASK\">\r\n          {(provided) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              {...provided.droppableProps}\r\n              className=\"kanban-column\"\r\n            >\r\n              <h3>{subtitle}</h3>\r\n              <div className=\"kanban-tasks-list\">\r\n                {column.taskIds.map((taskId, index) => (\r\n                  <KanbanTask\r\n                    key={taskId}\r\n                    taskId={taskId}\r\n                    task={tasks.tasks[taskId]}\r\n                    index={index}\r\n                  />\r\n                ))}\r\n              </div>\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanColumn;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
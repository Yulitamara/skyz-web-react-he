{"ast":null,"code":"var _jsxFileName = \"C:\\\\skyz-web-react-he\\\\src\\\\components\\\\KanbanColumn.js\";\n// import { Droppable } from \"react-beautiful-dnd\";\n// import \"../assets/scss/_kanban.scss\";\n// import KanbanTask from \"./KanbanTask\";\n\n// const KanbanColumn = ({ columnId, tasks, subtitle, titleClassName }) => {\n//   const column = tasks.columns[columnId];\n\n//   if (!column) {\n//     return null; // Handle the case where the column is not found\n//   }\n\n//   return (\n//     <div>\n//       <div className={`title ${titleClassName}`}>\n//         <h2>{column.title}</h2>\n//         <span className=\"material-symbols-outlined\">close</span>\n//       </div>\n//       <Droppable droppableId={columnId} type=\"TASK\">\n//         {(provided) => (\n//           <div\n//             ref={provided.innerRef}\n//             {...provided.droppableProps}\n//             className=\"kanban-column\"\n//           >\n//             <h3>{subtitle}</h3>\n//             <div className=\"kanban-tasks-list\">\n//               {column.taskIds.map((taskId, index) => (\n//                 <KanbanTask\n//                   key={taskId}\n//                   taskId={taskId}\n//                   task={tasks.tasks[taskId]}\n//                   index={index}\n//                 />\n//               ))}\n//             </div>\n//             {provided.placeholder}\n//           </div>\n//         )}\n//       </Droppable>\n//     </div>\n//   );\n// };\n\n// export default KanbanColumn;\n\n// const KanbanColumn = ({ columnId, tasks, subtitle, titleClassName }) => {\n//   const column = tasks.columns[columnId];\n\n//   if (!column) {\n//     return null;\n//   }\n\n//   return (\n//     <div>\n//       <div className={`title ${titleClassName}`}>\n//         <h2>{column.title}</h2>\n//         <span className=\"material-symbols-outlined\">close</span>\n//       </div>\n\n//       {/* First kanban-tasks-list */}\n//       <Droppable droppableId={`${columnId}-list1`} type=\"TASK\">\n//         {(provided) => (\n//           <div\n//             ref={provided.innerRef}\n//             {...provided.droppableProps}\n//             className=\"kanban-column\"\n//           >\n//             <h3>Subtitle 1</h3>\n//             <div className=\"kanban-tasks-list\">\n//               {column.taskIds.slice(0, 3).map((taskId, index) => (\n//                 <KanbanTask\n//                   key={taskId}\n//                   taskId={taskId}\n//                   task={tasks.tasks[taskId]}\n//                   index={index}\n//                 />\n//               ))}\n//             </div>\n//             {provided.placeholder}\n//           </div>\n//         )}\n//       </Droppable>\n\n//       {/* Second kanban-tasks-list */}\n//       <Droppable droppableId={`${columnId}-list2`} type=\"TASK\">\n//         {(provided) => (\n//           <div\n//             ref={provided.innerRef}\n//             {...provided.droppableProps}\n//             className=\"kanban-column\"\n//           >\n//             <h3>Subtitle 2</h3>\n//             <div className=\"kanban-tasks-list\">\n//               {column.taskIds.slice(3, 6).map((taskId, index) => (\n//                 <KanbanTask\n//                   key={taskId}\n//                   taskId={taskId}\n//                   task={tasks.tasks[taskId]}\n//                   index={index}\n//                 />\n//               ))}\n//             </div>\n//             {provided.placeholder}\n//           </div>\n//         )}\n//       </Droppable>\n\n//       {/* Third kanban-tasks-list */}\n//       <Droppable droppableId={`${columnId}-list3`} type=\"TASK\">\n//         {(provided) => (\n//           <div\n//             ref={provided.innerRef}\n//             {...provided.droppableProps}\n//             className=\"kanban-column\"\n//           >\n//             <h3>Subtitle 3</h3>\n//             <div className=\"kanban-tasks-list\">\n//               {column.taskIds.slice(6, 9).map((taskId, index) => (\n//                 <KanbanTask\n//                   key={taskId}\n//                   taskId={taskId}\n//                   task={tasks.tasks[taskId]}\n//                   index={index}\n//                 />\n//               ))}\n//             </div>\n//             {provided.placeholder}\n//           </div>\n//         )}\n//       </Droppable>\n//     </div>\n//   );\n// };\n\n// export default KanbanColumn;\n\nimport { Droppable } from \"react-beautiful-dnd\";\nimport \"../assets/scss/_kanban.scss\";\nimport KanbanTask from \"./KanbanTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KanbanColumn = _ref => {\n  let {\n    columnId,\n    tasks,\n    subtitle,\n    titleClassName\n  } = _ref;\n  const column = tasks.columns[columnId];\n  if (!column) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `title ${titleClassName}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: column.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined\",\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: `kanban-tasks-list-${columnId}`,\n      type: \"TASK\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: provided.innerRef,\n        ...provided.droppableProps,\n        className: \"kanban-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kanban-tasks-list\",\n          children: column.taskIds.map((taskId, index) => /*#__PURE__*/_jsxDEV(KanbanTask, {\n            taskId: taskId,\n            task: tasks.tasks[taskId],\n            index: index\n          }, taskId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_c = KanbanColumn;\nexport default KanbanColumn;\nvar _c;\n$RefreshReg$(_c, \"KanbanColumn\");","map":{"version":3,"names":["Droppable","KanbanTask","jsxDEV","_jsxDEV","KanbanColumn","_ref","columnId","tasks","subtitle","titleClassName","column","columns","children","className","title","fileName","_jsxFileName","lineNumber","columnNumber","droppableId","type","provided","ref","innerRef","droppableProps","taskIds","map","taskId","index","task","placeholder","_c","$RefreshReg$"],"sources":["C:/skyz-web-react-he/src/components/KanbanColumn.js"],"sourcesContent":["// import { Droppable } from \"react-beautiful-dnd\";\r\n// import \"../assets/scss/_kanban.scss\";\r\n// import KanbanTask from \"./KanbanTask\";\r\n\r\n// const KanbanColumn = ({ columnId, tasks, subtitle, titleClassName }) => {\r\n//   const column = tasks.columns[columnId];\r\n\r\n//   if (!column) {\r\n//     return null; // Handle the case where the column is not found\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <div className={`title ${titleClassName}`}>\r\n//         <h2>{column.title}</h2>\r\n//         <span className=\"material-symbols-outlined\">close</span>\r\n//       </div>\r\n//       <Droppable droppableId={columnId} type=\"TASK\">\r\n//         {(provided) => (\r\n//           <div\r\n//             ref={provided.innerRef}\r\n//             {...provided.droppableProps}\r\n//             className=\"kanban-column\"\r\n//           >\r\n//             <h3>{subtitle}</h3>\r\n//             <div className=\"kanban-tasks-list\">\r\n//               {column.taskIds.map((taskId, index) => (\r\n//                 <KanbanTask\r\n//                   key={taskId}\r\n//                   taskId={taskId}\r\n//                   task={tasks.tasks[taskId]}\r\n//                   index={index}\r\n//                 />\r\n//               ))}\r\n//             </div>\r\n//             {provided.placeholder}\r\n//           </div>\r\n//         )}\r\n//       </Droppable>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default KanbanColumn;\r\n\r\n// const KanbanColumn = ({ columnId, tasks, subtitle, titleClassName }) => {\r\n//   const column = tasks.columns[columnId];\r\n\r\n//   if (!column) {\r\n//     return null;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <div className={`title ${titleClassName}`}>\r\n//         <h2>{column.title}</h2>\r\n//         <span className=\"material-symbols-outlined\">close</span>\r\n//       </div>\r\n\r\n//       {/* First kanban-tasks-list */}\r\n//       <Droppable droppableId={`${columnId}-list1`} type=\"TASK\">\r\n//         {(provided) => (\r\n//           <div\r\n//             ref={provided.innerRef}\r\n//             {...provided.droppableProps}\r\n//             className=\"kanban-column\"\r\n//           >\r\n//             <h3>Subtitle 1</h3>\r\n//             <div className=\"kanban-tasks-list\">\r\n//               {column.taskIds.slice(0, 3).map((taskId, index) => (\r\n//                 <KanbanTask\r\n//                   key={taskId}\r\n//                   taskId={taskId}\r\n//                   task={tasks.tasks[taskId]}\r\n//                   index={index}\r\n//                 />\r\n//               ))}\r\n//             </div>\r\n//             {provided.placeholder}\r\n//           </div>\r\n//         )}\r\n//       </Droppable>\r\n\r\n//       {/* Second kanban-tasks-list */}\r\n//       <Droppable droppableId={`${columnId}-list2`} type=\"TASK\">\r\n//         {(provided) => (\r\n//           <div\r\n//             ref={provided.innerRef}\r\n//             {...provided.droppableProps}\r\n//             className=\"kanban-column\"\r\n//           >\r\n//             <h3>Subtitle 2</h3>\r\n//             <div className=\"kanban-tasks-list\">\r\n//               {column.taskIds.slice(3, 6).map((taskId, index) => (\r\n//                 <KanbanTask\r\n//                   key={taskId}\r\n//                   taskId={taskId}\r\n//                   task={tasks.tasks[taskId]}\r\n//                   index={index}\r\n//                 />\r\n//               ))}\r\n//             </div>\r\n//             {provided.placeholder}\r\n//           </div>\r\n//         )}\r\n//       </Droppable>\r\n\r\n//       {/* Third kanban-tasks-list */}\r\n//       <Droppable droppableId={`${columnId}-list3`} type=\"TASK\">\r\n//         {(provided) => (\r\n//           <div\r\n//             ref={provided.innerRef}\r\n//             {...provided.droppableProps}\r\n//             className=\"kanban-column\"\r\n//           >\r\n//             <h3>Subtitle 3</h3>\r\n//             <div className=\"kanban-tasks-list\">\r\n//               {column.taskIds.slice(6, 9).map((taskId, index) => (\r\n//                 <KanbanTask\r\n//                   key={taskId}\r\n//                   taskId={taskId}\r\n//                   task={tasks.tasks[taskId]}\r\n//                   index={index}\r\n//                 />\r\n//               ))}\r\n//             </div>\r\n//             {provided.placeholder}\r\n//           </div>\r\n//         )}\r\n//       </Droppable>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default KanbanColumn;\r\n\r\n\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport \"../assets/scss/_kanban.scss\";\r\nimport KanbanTask from \"./KanbanTask\";\r\nconst KanbanColumn = ({ columnId, tasks, subtitle, titleClassName }) => {\r\n  const column = tasks.columns[columnId];\r\n\r\n  if (!column) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={`title ${titleClassName}`}>\r\n        <h2>{column.title}</h2>\r\n        <span className=\"material-symbols-outlined\">close</span>\r\n      </div>\r\n\r\n      {/* Single kanban-tasks-list with the same Droppable id for all tasks */}\r\n      <Droppable droppableId={`kanban-tasks-list-${columnId}`} type=\"TASK\">\r\n        {(provided) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            className=\"kanban-column\"\r\n          >\r\n            <h3>{subtitle}</h3>\r\n            <div className=\"kanban-tasks-list\">\r\n              {column.taskIds.map((taskId, index) => (\r\n                <KanbanTask\r\n                  key={taskId}\r\n                  taskId={taskId}\r\n                  task={tasks.tasks[taskId]}\r\n                  index={index}\r\n                />\r\n              ))}\r\n            </div>\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KanbanColumn;"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,OAAO,6BAA6B;AACpC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtC,MAAMC,YAAY,GAAGC,IAAA,IAAmD;EAAA,IAAlD;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAe,CAAC,GAAAJ,IAAA;EACjE,MAAMK,MAAM,GAAGH,KAAK,CAACI,OAAO,CAACL,QAAQ,CAAC;EAEtC,IAAI,CAACI,MAAM,EAAE;IACX,OAAO,IAAI;EACb;EAEA,oBACEP,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAKU,SAAS,EAAG,SAAQJ,cAAe,EAAE;MAAAG,QAAA,gBACxCT,OAAA;QAAAS,QAAA,EAAKF,MAAM,CAACI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvBf,OAAA;QAAMU,SAAS,EAAC,2BAA2B;QAAAD,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eAGNf,OAAA,CAACH,SAAS;MAACmB,WAAW,EAAG,qBAAoBb,QAAS,EAAE;MAACc,IAAI,EAAC,MAAM;MAAAR,QAAA,EAChES,QAAQ,iBACRlB,OAAA;QACEmB,GAAG,EAAED,QAAQ,CAACE,QAAS;QAAA,GACnBF,QAAQ,CAACG,cAAc;QAC3BX,SAAS,EAAC,eAAe;QAAAD,QAAA,gBAEzBT,OAAA;UAAAS,QAAA,EAAKJ;QAAQ;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnBf,OAAA;UAAKU,SAAS,EAAC,mBAAmB;UAAAD,QAAA,EAC/BF,MAAM,CAACe,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAChCzB,OAAA,CAACF,UAAU;YAET0B,MAAM,EAAEA,MAAO;YACfE,IAAI,EAAEtB,KAAK,CAACA,KAAK,CAACoB,MAAM,CAAE;YAC1BC,KAAK,EAAEA;UAAM,GAHRD,MAAM;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIZ,CACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,EACLG,QAAQ,CAACS,WAAW;MAAA;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAACa,EAAA,GAvCI3B,YAAY;AAyClB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
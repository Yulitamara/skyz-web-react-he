{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yulit\\\\skyz-web-react-he\\\\src\\\\components\\\\Blog.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getImageSrc = p => !p ? \"\" : /^https?:\\/\\//i.test(p) ? p : `${process.env.PUBLIC_URL}${p.startsWith(\"/\") ? p : `/${p}`}`;\n\n// גוזר תקציר מתוך ה-HTML ב-content לפי מספר מילים\nfunction getExcerpt(content) {\n  let words = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 30;\n  const html = Array.isArray(content) ? content.join(\"\") : content || \"\";\n  // ממיר HTML לטקסט רגיל וגם מדמה דקוֹד של ישויות כמו &nbsp;\n  const doc = new DOMParser().parseFromString(html, \"text/html\");\n  const text = (doc.body.textContent || \"\").trim().replace(/\\s+/g, \" \");\n  const tokens = text.split(\" \");\n  return tokens.length > words ? tokens.slice(0, words).join(\" \") + \"…\" : text;\n}\nconst Blog = _ref => {\n  let {\n    blogs = [],\n    excerptWords = 20\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: blogs.map(blog => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/בלוג/${blog.url}/`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"blog-title\",\n          children: blog.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: getImageSrc(blog.img),\n            alt: blog.title,\n            onError: e => e.currentTarget.style.display = \"none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: blog.short ? blog.short : getExcerpt(blog.content, excerptWords)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, blog.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","getImageSrc","p","test","process","env","PUBLIC_URL","startsWith","getExcerpt","content","words","arguments","length","undefined","html","Array","isArray","join","doc","DOMParser","parseFromString","text","body","textContent","trim","replace","tokens","split","slice","Blog","_ref","blogs","excerptWords","children","map","blog","className","to","url","title","fileName","_jsxFileName","lineNumber","columnNumber","src","img","alt","onError","e","currentTarget","style","display","short","id","_c","$RefreshReg$"],"sources":["C:/Users/yulit/skyz-web-react-he/src/components/Blog.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst getImageSrc = (p) =>\r\n  !p ? \"\" : /^https?:\\/\\//i.test(p) ? p : `${process.env.PUBLIC_URL}${p.startsWith(\"/\") ? p : `/${p}`}`;\r\n\r\n// גוזר תקציר מתוך ה-HTML ב-content לפי מספר מילים\r\nfunction getExcerpt(content, words = 30) {\r\n  const html = Array.isArray(content) ? content.join(\"\") : (content || \"\");\r\n  // ממיר HTML לטקסט רגיל וגם מדמה דקוֹד של ישויות כמו &nbsp;\r\n  const doc = new DOMParser().parseFromString(html, \"text/html\");\r\n  const text = (doc.body.textContent || \"\").trim().replace(/\\s+/g, \" \");\r\n  const tokens = text.split(\" \");\r\n  return tokens.length > words ? tokens.slice(0, words).join(\" \") + \"…\" : text;\r\n}\r\n\r\nconst Blog = ({ blogs = [], excerptWords = 20 }) => {\r\n  return (\r\n    <>\r\n      {blogs.map((blog) => (\r\n        <div className=\"blog\" key={blog.id}>\r\n          <Link to={`/בלוג/${blog.url}/`}>\r\n            <h3 className=\"blog-title\">{blog.title}</h3>\r\n            <div className=\"img-container\">\r\n              <img\r\n                src={getImageSrc(blog.img)}\r\n                alt={blog.title}\r\n                onError={(e) => (e.currentTarget.style.display = \"none\")}\r\n              />\r\n            </div>\r\n            {/* אם יש short נשתמש בו; אחרת נגזור מתוך content */}\r\n            <p>{blog.short ? blog.short : getExcerpt(blog.content, excerptWords)}</p>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
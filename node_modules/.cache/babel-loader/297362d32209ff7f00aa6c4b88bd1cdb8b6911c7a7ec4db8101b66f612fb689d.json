{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Component, NotifyPropertyChanges, Property, Complex, Collection, detach } from '@syncfusion/ej2-base';\nimport { addClass, classList, removeClass, compile, formatUnit, L10n, Browser, Event } from '@syncfusion/ej2-base';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { Data } from './data';\nimport { SwimlaneSettings } from '../models/swimlane-settings';\nimport { CardSettings } from '../models/card-settings';\nimport { DialogSettings } from '../models/dialog-settings';\nimport { Columns } from '../models/columns';\nimport { StackedHeaders } from '../models/stacked-headers';\nimport { SortSettings } from '../models/sort-settings';\nimport { Action } from '../actions/action';\nimport { Crud } from '../actions/crud';\nimport { DragAndDrop } from '../actions/drag';\nimport { KanbanDialog } from '../actions/dialog';\nimport { Keyboard } from '../actions/keyboard';\nimport { KanbanTooltip } from '../actions/tooltip';\nimport { KanbanTouch } from '../actions/touch';\nimport { LayoutRender } from './layout-render';\nimport * as events from '../base/constant';\nimport * as cls from './css-constant';\n/**\n * The Kanban component is an efficient way to visually depict various stages of a process using cards with transparent workflows.\n * The component has rich set of APIs, methods, and events used to enable or disable its features and customize them.\n * ```html\n * <div id=\"kanban\"></div>\n * ```\n * ```typescript\n * <script>\n *   var kanbanObj = new Kanban();\n *   kanbanObj.appendTo(\"#kanban\");\n * </script>\n * ```\n */\nvar Kanban = /** @class */function (_super) {\n  __extends(Kanban, _super);\n  /**\n   * Constructor for creating the Kanban widget\n   *\n   * @param {KanbanModel} options Accepts the kanban properties to render the component.\n   * @param {string | HTMLElement} element Accepts the DOM element reference as either selector or element to render the component.\n   */\n  function Kanban(options, element) {\n    return _super.call(this, options, element) || this;\n  }\n  /**\n   * Initializes the values of private members.\n   *\n   * @returns {void}\n   * @private\n   */\n  Kanban.prototype.preRender = function () {\n    this.isAdaptive = Browser.isDevice;\n    this.kanbanData = [];\n    if (!this.enablePersistence || !this.swimlaneToggleArray) {\n      this.swimlaneToggleArray = [];\n    }\n    this.activeCardData = {\n      data: null,\n      element: null\n    };\n    var defaultLocale = {\n      items: 'items',\n      min: 'Min',\n      max: 'Max',\n      cardsSelected: 'Cards Selected',\n      addTitle: 'Add New Card',\n      editTitle: 'Edit Card Details',\n      deleteTitle: 'Delete Card',\n      deleteContent: 'Are you sure you want to delete this card?',\n      save: 'Save',\n      delete: 'Delete',\n      cancel: 'Cancel',\n      yes: 'Yes',\n      no: 'No',\n      close: 'Close',\n      noCard: 'No cards to display',\n      unassigned: 'Unassigned'\n    };\n    this.localeObj = new L10n(this.getModuleName(), defaultLocale, this.locale);\n    this.scrollPosition = {\n      content: {\n        left: 0,\n        top: 0\n      },\n      column: {}\n    };\n    this.isInitialRender = true;\n  };\n  /**\n   * To provide the array of modules needed for control rendering\n   *\n   * @returns {ModuleDeclaration[]} Returns the declared modules.\n   * @private\n   */\n  Kanban.prototype.requiredModules = function () {\n    var modules = [];\n    return modules;\n  };\n  /**\n   * Returns the properties to be maintained in the persisted state.\n   *\n   * @returns {string} Returns the persistance state.\n   * @private\n   */\n  Kanban.prototype.getPersistData = function () {\n    if (this.dataSource.length > 0) {\n      return this.addOnPersist(['columns', 'dataSource', 'swimlaneToggleArray']);\n    } else {\n      return this.addOnPersist(['columns', 'kanbanData', 'swimlaneToggleArray']);\n    }\n  };\n  /**\n   * Core method to return the component name.\n   *\n   * @returns {string} Returns the module name.\n   * @private\n   */\n  Kanban.prototype.getModuleName = function () {\n    return 'kanban';\n  };\n  /**\n   * Core method that initializes the control rendering.\n   *\n   * @returns {void}\n   * @private\n   */\n  Kanban.prototype.render = function () {\n    var addClasses = [cls.ROOT_CLASS];\n    var removeClasses = [];\n    if (this.enableRtl) {\n      addClasses.push(cls.RTL_CLASS);\n    } else {\n      removeClasses.push(cls.RTL_CLASS);\n    }\n    if (this.isAdaptive) {\n      addClasses.push(cls.DEVICE_CLASS);\n    } else {\n      removeClasses.push(cls.DEVICE_CLASS);\n    }\n    if (this.cssClass) {\n      addClasses.push(this.cssClass);\n    }\n    this.element.setAttribute('role', 'main');\n    classList(this.element, addClasses, removeClasses);\n    this.element.style.width = formatUnit(this.width);\n    this.element.style.height = formatUnit(this.height);\n    createSpinner({\n      target: this.element\n    });\n    this.showSpinner();\n    this.initializeModules();\n  };\n  /**\n   * Called internally, if any of the property value changed.\n   *\n   * @param {KanbanModel} newProp Gets the updated values\n   * @param {KanbanModel} oldProp Gets the previous values\n   * @returns {void}\n   * @private\n   */\n  Kanban.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      switch (prop) {\n        case 'cssClass':\n          if (oldProp.cssClass) {\n            removeClass([this.element], oldProp.cssClass);\n          }\n          if (newProp.cssClass) {\n            addClass([this.element], newProp.cssClass);\n          }\n          break;\n        case 'enableRtl':\n        case 'locale':\n          this.refresh();\n          break;\n        case 'width':\n          this.element.style.width = formatUnit(newProp.width);\n          this.element.querySelector('.' + cls.HEADER_CLASS).firstElementChild.style.width = 'auto';\n          this.notify(events.contentReady, {});\n          break;\n        case 'height':\n          this.element.style.height = formatUnit(newProp.height);\n          this.element.querySelector('.' + cls.CONTENT_CLASS).style.height = 'auto';\n          this.notify(events.contentReady, {});\n          break;\n        case 'dataSource':\n        case 'query':\n          if (this.dataModule) {\n            this.dataModule.setState({\n              isDataChanged: false\n            });\n          }\n          this.dataModule = new Data(this);\n          break;\n        case 'columns':\n        case 'constraintType':\n          this.notify(events.dataReady, {\n            processedData: this.kanbanData\n          });\n          break;\n        case 'swimlaneSettings':\n          this.onSwimlaneSettingsPropertyChanged(newProp.swimlaneSettings, oldProp.swimlaneSettings);\n          break;\n        case 'cardSettings':\n          this.onCardSettingsPropertyChanged(newProp.cardSettings, oldProp.cardSettings);\n          break;\n        case 'allowDragAndDrop':\n          if (newProp.allowDragAndDrop) {\n            this.layoutModule.wireDragEvent();\n          } else {\n            this.layoutModule.unWireDragEvent();\n          }\n          break;\n        case 'enableTooltip':\n          if (this.tooltipModule) {\n            this.tooltipModule.destroy();\n            this.tooltipModule = null;\n          }\n          if (newProp.enableTooltip) {\n            this.tooltipModule = new KanbanTooltip(this);\n            this.layoutModule.refreshCards();\n          }\n          break;\n        case 'dialogSettings':\n          if (newProp.dialogSettings) {\n            this.dialogModule = new KanbanDialog(this);\n          }\n          break;\n        case 'allowKeyboard':\n          if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n            this.keyboardModule = null;\n          }\n          if (newProp.allowKeyboard) {\n            this.keyboardModule = new Keyboard(this);\n          }\n          break;\n        case 'stackedHeaders':\n          this.layoutModule.refreshHeaders();\n          break;\n        case 'sortSettings':\n          this.notify(events.dataReady, {\n            processedData: this.kanbanData\n          });\n          break;\n        default:\n          break;\n      }\n    }\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Kanban.prototype.onSwimlaneSettingsPropertyChanged = function (newProp, _oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      switch (prop) {\n        case 'keyField':\n        case 'textField':\n        case 'showEmptyRow':\n        case 'showItemCount':\n        case 'template':\n        case 'sortDirection':\n          this.notify(events.dataReady, {\n            processedData: this.kanbanData\n          });\n          break;\n        case 'enableFrozenRows':\n          if (this.layoutModule.frozenSwimlaneRow && !this.swimlaneSettings.enableFrozenRows) {\n            this.layoutModule.removeFrozenRows();\n          }\n          break;\n      }\n    }\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  Kanban.prototype.onCardSettingsPropertyChanged = function (newProp, _oldProp) {\n    var cards = [];\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      switch (prop) {\n        case 'showHeader':\n        case 'headerField':\n        case 'contentField':\n        case 'template':\n        case 'tagsField':\n        case 'grabberField':\n        case 'footerCssField':\n          this.layoutModule.refreshCards();\n          break;\n        case 'selectionType':\n          cards = this.getSelectedCards();\n          if (cards.length > 0) {\n            removeClass(cards, cls.CARD_SELECTION_CLASS);\n            this.layoutModule.disableAttributeSelection(cards);\n          }\n          break;\n      }\n    }\n  };\n  Kanban.prototype.initializeModules = function () {\n    this.dataModule = new Data(this);\n    this.layoutModule = new LayoutRender(this);\n    if (this.allowKeyboard) {\n      this.keyboardModule = new Keyboard(this);\n    }\n    this.actionModule = new Action(this);\n    this.crudModule = new Crud(this);\n    this.dragAndDropModule = new DragAndDrop(this);\n    this.dialogModule = new KanbanDialog(this);\n    if (this.enableTooltip) {\n      this.tooltipModule = new KanbanTooltip(this);\n    }\n    if (Browser.isDevice || Browser.isTouch) {\n      this.touchModule = new KanbanTouch(this);\n    }\n  };\n  Kanban.prototype.renderTemplates = function () {\n    if (this.isReact) {\n      this.renderReactTemplates();\n    }\n  };\n  Kanban.prototype.resetTemplates = function (templates) {\n    if (this.isReact) {\n      this.clearTemplate(templates);\n    }\n  };\n  Kanban.prototype.destroyModules = function () {\n    if (this.layoutModule) {\n      this.layoutModule.destroy();\n      this.layoutModule = null;\n    }\n    if (this.keyboardModule) {\n      this.keyboardModule.destroy();\n      this.keyboardModule = null;\n    }\n    if (this.touchModule) {\n      this.touchModule.destroy();\n      this.touchModule = null;\n    }\n    this.dialogModule = null;\n    this.actionModule = null;\n    this.crudModule = null;\n    this.dataModule = null;\n    this.dragAndDropModule = null;\n  };\n  Kanban.prototype.templateParser = function (template) {\n    if (template) {\n      try {\n        if (document.querySelectorAll(template).length) {\n          return compile(document.querySelector(template).innerHTML.trim());\n        }\n      } catch (error) {\n        return compile(template);\n      }\n    }\n    return undefined;\n  };\n  /**\n   * Returns the card details based on card ID from the board.\n   *\n   * @function getCardDetails\n   * @param {Element} target Accepts the card element to get the details.\n   * @returns {Object} Returns the card details based on given target.\n   */\n  Kanban.prototype.getCardDetails = function (target) {\n    var _this = this;\n    var isNumeric = typeof this.kanbanData[0][this.cardSettings.headerField] === 'number';\n    var targetId = isNumeric ? parseInt(target.getAttribute('data-id'), 10) : target.getAttribute('data-id');\n    var cardObj = this.kanbanData.filter(function (data) {\n      return data[_this.cardSettings.headerField] === targetId;\n    })[0];\n    return cardObj;\n  };\n  /**\n   * Returns the column data based on column key input.\n   *\n   * @function getColumnData\n   * @param {string | number} columnKey Accepts the column key to get the objects.\n   * @param {Object[]} dataSource Accepts the collection of objects to get the results based on given columnKey.\n   * @returns {Object[]} Returns the collection of card objects based on given inputs.\n   */\n  Kanban.prototype.getColumnData = function (columnKey, dataSource) {\n    return this.layoutModule.getColumnCards(dataSource)[columnKey] || [];\n  };\n  /**\n   * Returns the swimlane column data based on swimlane keyField input.\n   *\n   * @function getSwimlaneData\n   * @param {string} keyField Accepts the swimlane keyField to get the objects.\n   * @returns {Object[]} Returns the collection of card objects based on given inputs.\n   */\n  Kanban.prototype.getSwimlaneData = function (keyField) {\n    return this.layoutModule.getSwimlaneCards()[keyField] || [];\n  };\n  /**\n   * Gets the list of selected cards from the board.\n   *\n   * @function getSelectedCards\n   * @returns {HTMLElement[]} Returns the card elements based on selection.\n   */\n  Kanban.prototype.getSelectedCards = function () {\n    return [].slice.call(this.element.querySelectorAll('.' + cls.CARD_CLASS + '.' + cls.CARD_SELECTION_CLASS));\n  };\n  /**\n   * Allows you to show the spinner on Kanban at the required scenarios.\n   *\n   * @function showSpinner\n   * @returns {void}\n   */\n  Kanban.prototype.showSpinner = function () {\n    showSpinner(this.element);\n  };\n  /**\n   * When the spinner is shown manually using the showSpinner method, it can be hidden using this `hideSpinner` method.\n   *\n   * @function hideSpinner\n   * @returns {void}\n   */\n  Kanban.prototype.hideSpinner = function () {\n    hideSpinner(this.element);\n  };\n  /**\n   * To manually open the dialog.\n   *\n   * @function openDialog\n   * @param {CurrentAction} action Accepts the action for which the dialog needs to be opened such as either for new card creation or\n   *  editing of existing cards. The applicable action names are `Add` and `Edit`.\n   * @param {Object} data It can be card data.\n   * @returns {void}\n   */\n  Kanban.prototype.openDialog = function (action, data) {\n    this.dialogModule.openDialog(action, data);\n  };\n  /**\n   * To manually close the dialog.\n   *\n   * @function closeDialog\n   * @returns {void}\n   */\n  Kanban.prototype.closeDialog = function () {\n    this.dialogModule.closeDialog();\n  };\n  /**\n   * Adds the new card to the data source of Kanban and layout.\n   *\n   * @function addCard\n   * @param {Object | Object[]} cardData Accepts Single card object or Collection of card objects to be added into Kanban.\n   * @param {number} index Accepts the index to insert the card in column.\n   * @returns {void}\n   */\n  Kanban.prototype.addCard = function (cardData, index) {\n    this.crudModule.addCard(cardData, index);\n  };\n  /**\n   * Updates the changes made in the card object by passing it as a parameter to the data source.\n   *\n   * @function updateCard\n   * @param {Object | Object[]} cardData Accepts Single card object or Collection of card objects to be updated into Kanban.\n   * @param {number} index Accepts the index to update the card in column.\n   * @returns {void}\n   */\n  Kanban.prototype.updateCard = function (cardData, index) {\n    this.crudModule.updateCard(cardData, index);\n  };\n  /**\n   * Deletes the card based on the provided ID or card collection in the argument list.\n   *\n   * @function deleteCard\n   * @param {string | number | Object | Object[]} cardData Accepts the ID of the remove card in string or number type or\n   * Single card object or Collection of card objects to be removed from Kanban\n   * @returns {void}\n   */\n  Kanban.prototype.deleteCard = function (cardData) {\n    this.crudModule.deleteCard(cardData);\n  };\n  /**\n   * Add the column to Kanban board dynamically based on the provided column options and index in the argument list.\n   *\n   * @function addColumn\n   * @param {ColumnsModel} columnOptions Accepts the properties to new column that are going to be added in the board.\n   * @param {number} index Accepts the index of column to add the new column.\n   * @returns {void}\n   */\n  Kanban.prototype.addColumn = function (columnOptions, index) {\n    this.actionModule.addColumn(columnOptions, index);\n  };\n  /**\n   * Deletes the column based on the provided index value.\n   *\n   * @function deleteColumn\n   * @param {number} index Accepts the index of column to delete the existing column from Kanban board.\n   * @returns {void}\n   */\n  Kanban.prototype.deleteColumn = function (index) {\n    this.actionModule.deleteColumn(index);\n  };\n  /**\n   * Shows the column from hidden based on the provided key in the columns.\n   *\n   * @function showColumn\n   * @param {string | number} key Accepts the hidden column key name to be shown from the hidden state in board.\n   * @returns {void}\n   */\n  Kanban.prototype.showColumn = function (key) {\n    this.actionModule.showColumn(key);\n  };\n  /**\n   * Hides the column from Kanban board based on the provided key in the columns.\n   *\n   * @function hideColumn\n   * @param {string | number} key Accepts the visible column key name to be hidden from the board.\n   * @returns {void}\n   */\n  Kanban.prototype.hideColumn = function (key) {\n    this.actionModule.hideColumn(key);\n  };\n  /**\n   * Method to refresh the Kanban UI based on modified records.\n   *\n   * @function refreshUI\n   * @param {ActionEventArgs} args Accepts the added, changed or deleted data.\n   * @param {number} index Accepts the index of the changed items.\n   * @returns {void}\n   */\n  Kanban.prototype.refreshUI = function (args, index) {\n    index = index ? index : 0;\n    this.dataModule.refreshUI(args, index);\n  };\n  /**\n   * Method to refresh the column header.\n   *\n   * @method refreshHeader\n   * @returns {void}\n   */\n  Kanban.prototype.refreshHeader = function () {\n    this.resetTemplates(['columnTemplate']);\n    if (this.layoutModule) {\n      this.layoutModule.refreshHeaders();\n    }\n    this.renderTemplates();\n  };\n  /**\n   * Removes the control from the DOM and detaches all its related event handlers. Also, it removes the attributes and classes.\n   *\n   * @function destroy\n   * @returns {void}\n   */\n  Kanban.prototype.destroy = function () {\n    this.destroyModules();\n    [].slice.call(this.element.childNodes).forEach(function (node) {\n      detach(node);\n    });\n    var removeClasses = [cls.ROOT_CLASS];\n    if (this.cssClass) {\n      removeClasses = removeClasses.concat(this.cssClass.split(' '));\n    }\n    removeClass([this.element], removeClasses);\n    _super.prototype.destroy.call(this);\n  };\n  __decorate([Property()], Kanban.prototype, \"cssClass\", void 0);\n  __decorate([Property('auto')], Kanban.prototype, \"width\", void 0);\n  __decorate([Property('auto')], Kanban.prototype, \"height\", void 0);\n  __decorate([Property([])], Kanban.prototype, \"dataSource\", void 0);\n  __decorate([Property()], Kanban.prototype, \"query\", void 0);\n  __decorate([Property()], Kanban.prototype, \"keyField\", void 0);\n  __decorate([Property('Column')], Kanban.prototype, \"constraintType\", void 0);\n  __decorate([Property([])], Kanban.prototype, \"externalDropId\", void 0);\n  __decorate([Collection([], Columns)], Kanban.prototype, \"columns\", void 0);\n  __decorate([Property(true)], Kanban.prototype, \"allowKeyboard\", void 0);\n  __decorate([Collection([], StackedHeaders)], Kanban.prototype, \"stackedHeaders\", void 0);\n  __decorate([Complex({}, SwimlaneSettings)], Kanban.prototype, \"swimlaneSettings\", void 0);\n  __decorate([Complex({}, CardSettings)], Kanban.prototype, \"cardSettings\", void 0);\n  __decorate([Complex({}, SortSettings)], Kanban.prototype, \"sortSettings\", void 0);\n  __decorate([Complex({}, DialogSettings)], Kanban.prototype, \"dialogSettings\", void 0);\n  __decorate([Property(true)], Kanban.prototype, \"allowDragAndDrop\", void 0);\n  __decorate([Property(false)], Kanban.prototype, \"enableTooltip\", void 0);\n  __decorate([Property(false)], Kanban.prototype, \"showEmptyColumn\", void 0);\n  __decorate([Property(false)], Kanban.prototype, \"enablePersistence\", void 0);\n  __decorate([Property()], Kanban.prototype, \"tooltipTemplate\", void 0);\n  __decorate([Event()], Kanban.prototype, \"actionBegin\", void 0);\n  __decorate([Event()], Kanban.prototype, \"actionComplete\", void 0);\n  __decorate([Event()], Kanban.prototype, \"actionFailure\", void 0);\n  __decorate([Event()], Kanban.prototype, \"created\", void 0);\n  __decorate([Event()], Kanban.prototype, \"dataBinding\", void 0);\n  __decorate([Event()], Kanban.prototype, \"dataBound\", void 0);\n  __decorate([Event()], Kanban.prototype, \"cardClick\", void 0);\n  __decorate([Event()], Kanban.prototype, \"cardDoubleClick\", void 0);\n  __decorate([Event()], Kanban.prototype, \"queryCellInfo\", void 0);\n  __decorate([Event()], Kanban.prototype, \"cardRendered\", void 0);\n  __decorate([Event()], Kanban.prototype, \"dragStart\", void 0);\n  __decorate([Event()], Kanban.prototype, \"drag\", void 0);\n  __decorate([Event()], Kanban.prototype, \"dragStop\", void 0);\n  __decorate([Event()], Kanban.prototype, \"dialogOpen\", void 0);\n  __decorate([Event()], Kanban.prototype, \"dialogClose\", void 0);\n  __decorate([Event()], Kanban.prototype, \"dataStateChange\", void 0);\n  __decorate([Event()], Kanban.prototype, \"dataSourceChanged\", void 0);\n  Kanban = __decorate([NotifyPropertyChanges], Kanban);\n  return Kanban;\n}(Component);\nexport { Kanban };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","NotifyPropertyChanges","Property","Complex","Collection","detach","addClass","classList","removeClass","compile","formatUnit","L10n","Browser","Event","createSpinner","hideSpinner","showSpinner","Data","SwimlaneSettings","CardSettings","DialogSettings","Columns","StackedHeaders","SortSettings","Action","Crud","DragAndDrop","KanbanDialog","Keyboard","KanbanTooltip","KanbanTouch","LayoutRender","events","cls","Kanban","_super","options","element","call","preRender","isAdaptive","isDevice","kanbanData","enablePersistence","swimlaneToggleArray","activeCardData","data","defaultLocale","items","min","max","cardsSelected","addTitle","editTitle","deleteTitle","deleteContent","save","delete","cancel","yes","no","close","noCard","unassigned","localeObj","getModuleName","locale","scrollPosition","content","left","top","column","isInitialRender","requiredModules","modules","getPersistData","dataSource","addOnPersist","render","addClasses","ROOT_CLASS","removeClasses","enableRtl","push","RTL_CLASS","DEVICE_CLASS","cssClass","setAttribute","style","width","height","initializeModules","onPropertyChanged","newProp","oldProp","_i","_a","keys","prop","refresh","querySelector","HEADER_CLASS","firstElementChild","notify","contentReady","CONTENT_CLASS","dataModule","setState","isDataChanged","dataReady","processedData","onSwimlaneSettingsPropertyChanged","swimlaneSettings","onCardSettingsPropertyChanged","cardSettings","allowDragAndDrop","layoutModule","wireDragEvent","unWireDragEvent","tooltipModule","destroy","enableTooltip","refreshCards","dialogSettings","dialogModule","keyboardModule","allowKeyboard","refreshHeaders","_oldProp","frozenSwimlaneRow","enableFrozenRows","removeFrozenRows","cards","getSelectedCards","CARD_SELECTION_CLASS","disableAttributeSelection","actionModule","crudModule","dragAndDropModule","isTouch","touchModule","renderTemplates","isReact","renderReactTemplates","resetTemplates","templates","clearTemplate","destroyModules","templateParser","template","document","querySelectorAll","innerHTML","trim","error","undefined","getCardDetails","_this","isNumeric","headerField","targetId","parseInt","getAttribute","cardObj","filter","getColumnData","columnKey","getColumnCards","getSwimlaneData","keyField","getSwimlaneCards","slice","CARD_CLASS","openDialog","action","closeDialog","addCard","cardData","index","updateCard","deleteCard","addColumn","columnOptions","deleteColumn","showColumn","hideColumn","refreshUI","args","refreshHeader","childNodes","forEach","node","concat","split"],"sources":["C:/skyz-web-react-he/node_modules/@syncfusion/ej2-kanban/src/kanban/base/kanban.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Component, NotifyPropertyChanges, Property, Complex, Collection, detach } from '@syncfusion/ej2-base';\nimport { addClass, classList, removeClass, compile, formatUnit, L10n, Browser, Event } from '@syncfusion/ej2-base';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { Data } from './data';\nimport { SwimlaneSettings } from '../models/swimlane-settings';\nimport { CardSettings } from '../models/card-settings';\nimport { DialogSettings } from '../models/dialog-settings';\nimport { Columns } from '../models/columns';\nimport { StackedHeaders } from '../models/stacked-headers';\nimport { SortSettings } from '../models/sort-settings';\nimport { Action } from '../actions/action';\nimport { Crud } from '../actions/crud';\nimport { DragAndDrop } from '../actions/drag';\nimport { KanbanDialog } from '../actions/dialog';\nimport { Keyboard } from '../actions/keyboard';\nimport { KanbanTooltip } from '../actions/tooltip';\nimport { KanbanTouch } from '../actions/touch';\nimport { LayoutRender } from './layout-render';\nimport * as events from '../base/constant';\nimport * as cls from './css-constant';\n/**\n * The Kanban component is an efficient way to visually depict various stages of a process using cards with transparent workflows.\n * The component has rich set of APIs, methods, and events used to enable or disable its features and customize them.\n * ```html\n * <div id=\"kanban\"></div>\n * ```\n * ```typescript\n * <script>\n *   var kanbanObj = new Kanban();\n *   kanbanObj.appendTo(\"#kanban\");\n * </script>\n * ```\n */\nvar Kanban = /** @class */ (function (_super) {\n    __extends(Kanban, _super);\n    /**\n     * Constructor for creating the Kanban widget\n     *\n     * @param {KanbanModel} options Accepts the kanban properties to render the component.\n     * @param {string | HTMLElement} element Accepts the DOM element reference as either selector or element to render the component.\n     */\n    function Kanban(options, element) {\n        return _super.call(this, options, element) || this;\n    }\n    /**\n     * Initializes the values of private members.\n     *\n     * @returns {void}\n     * @private\n     */\n    Kanban.prototype.preRender = function () {\n        this.isAdaptive = Browser.isDevice;\n        this.kanbanData = [];\n        if (!this.enablePersistence || !this.swimlaneToggleArray) {\n            this.swimlaneToggleArray = [];\n        }\n        this.activeCardData = { data: null, element: null };\n        var defaultLocale = {\n            items: 'items',\n            min: 'Min',\n            max: 'Max',\n            cardsSelected: 'Cards Selected',\n            addTitle: 'Add New Card',\n            editTitle: 'Edit Card Details',\n            deleteTitle: 'Delete Card',\n            deleteContent: 'Are you sure you want to delete this card?',\n            save: 'Save',\n            delete: 'Delete',\n            cancel: 'Cancel',\n            yes: 'Yes',\n            no: 'No',\n            close: 'Close',\n            noCard: 'No cards to display',\n            unassigned: 'Unassigned'\n        };\n        this.localeObj = new L10n(this.getModuleName(), defaultLocale, this.locale);\n        this.scrollPosition = { content: { left: 0, top: 0 }, column: {} };\n        this.isInitialRender = true;\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     *\n     * @returns {ModuleDeclaration[]} Returns the declared modules.\n     * @private\n     */\n    Kanban.prototype.requiredModules = function () {\n        var modules = [];\n        return modules;\n    };\n    /**\n     * Returns the properties to be maintained in the persisted state.\n     *\n     * @returns {string} Returns the persistance state.\n     * @private\n     */\n    Kanban.prototype.getPersistData = function () {\n        if (this.dataSource.length > 0) {\n            return this.addOnPersist(['columns', 'dataSource', 'swimlaneToggleArray']);\n        }\n        else {\n            return this.addOnPersist(['columns', 'kanbanData', 'swimlaneToggleArray']);\n        }\n    };\n    /**\n     * Core method to return the component name.\n     *\n     * @returns {string} Returns the module name.\n     * @private\n     */\n    Kanban.prototype.getModuleName = function () {\n        return 'kanban';\n    };\n    /**\n     * Core method that initializes the control rendering.\n     *\n     * @returns {void}\n     * @private\n     */\n    Kanban.prototype.render = function () {\n        var addClasses = [cls.ROOT_CLASS];\n        var removeClasses = [];\n        if (this.enableRtl) {\n            addClasses.push(cls.RTL_CLASS);\n        }\n        else {\n            removeClasses.push(cls.RTL_CLASS);\n        }\n        if (this.isAdaptive) {\n            addClasses.push(cls.DEVICE_CLASS);\n        }\n        else {\n            removeClasses.push(cls.DEVICE_CLASS);\n        }\n        if (this.cssClass) {\n            addClasses.push(this.cssClass);\n        }\n        this.element.setAttribute('role', 'main');\n        classList(this.element, addClasses, removeClasses);\n        this.element.style.width = formatUnit(this.width);\n        this.element.style.height = formatUnit(this.height);\n        createSpinner({ target: this.element });\n        this.showSpinner();\n        this.initializeModules();\n    };\n    /**\n     * Called internally, if any of the property value changed.\n     *\n     * @param {KanbanModel} newProp Gets the updated values\n     * @param {KanbanModel} oldProp Gets the previous values\n     * @returns {void}\n     * @private\n     */\n    Kanban.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'cssClass':\n                    if (oldProp.cssClass) {\n                        removeClass([this.element], oldProp.cssClass);\n                    }\n                    if (newProp.cssClass) {\n                        addClass([this.element], newProp.cssClass);\n                    }\n                    break;\n                case 'enableRtl':\n                case 'locale':\n                    this.refresh();\n                    break;\n                case 'width':\n                    this.element.style.width = formatUnit(newProp.width);\n                    this.element.querySelector('.' + cls.HEADER_CLASS).firstElementChild.style.width = 'auto';\n                    this.notify(events.contentReady, {});\n                    break;\n                case 'height':\n                    this.element.style.height = formatUnit(newProp.height);\n                    this.element.querySelector('.' + cls.CONTENT_CLASS).style.height = 'auto';\n                    this.notify(events.contentReady, {});\n                    break;\n                case 'dataSource':\n                case 'query':\n                    if (this.dataModule) {\n                        this.dataModule.setState({ isDataChanged: false });\n                    }\n                    this.dataModule = new Data(this);\n                    break;\n                case 'columns':\n                case 'constraintType':\n                    this.notify(events.dataReady, { processedData: this.kanbanData });\n                    break;\n                case 'swimlaneSettings':\n                    this.onSwimlaneSettingsPropertyChanged(newProp.swimlaneSettings, oldProp.swimlaneSettings);\n                    break;\n                case 'cardSettings':\n                    this.onCardSettingsPropertyChanged(newProp.cardSettings, oldProp.cardSettings);\n                    break;\n                case 'allowDragAndDrop':\n                    if (newProp.allowDragAndDrop) {\n                        this.layoutModule.wireDragEvent();\n                    }\n                    else {\n                        this.layoutModule.unWireDragEvent();\n                    }\n                    break;\n                case 'enableTooltip':\n                    if (this.tooltipModule) {\n                        this.tooltipModule.destroy();\n                        this.tooltipModule = null;\n                    }\n                    if (newProp.enableTooltip) {\n                        this.tooltipModule = new KanbanTooltip(this);\n                        this.layoutModule.refreshCards();\n                    }\n                    break;\n                case 'dialogSettings':\n                    if (newProp.dialogSettings) {\n                        this.dialogModule = new KanbanDialog(this);\n                    }\n                    break;\n                case 'allowKeyboard':\n                    if (this.keyboardModule) {\n                        this.keyboardModule.destroy();\n                        this.keyboardModule = null;\n                    }\n                    if (newProp.allowKeyboard) {\n                        this.keyboardModule = new Keyboard(this);\n                    }\n                    break;\n                case 'stackedHeaders':\n                    this.layoutModule.refreshHeaders();\n                    break;\n                case 'sortSettings':\n                    this.notify(events.dataReady, { processedData: this.kanbanData });\n                    break;\n                default:\n                    break;\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Kanban.prototype.onSwimlaneSettingsPropertyChanged = function (newProp, _oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'keyField':\n                case 'textField':\n                case 'showEmptyRow':\n                case 'showItemCount':\n                case 'template':\n                case 'sortDirection':\n                    this.notify(events.dataReady, { processedData: this.kanbanData });\n                    break;\n                case 'enableFrozenRows':\n                    if (this.layoutModule.frozenSwimlaneRow && !this.swimlaneSettings.enableFrozenRows) {\n                        this.layoutModule.removeFrozenRows();\n                    }\n                    break;\n            }\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Kanban.prototype.onCardSettingsPropertyChanged = function (newProp, _oldProp) {\n        var cards = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'showHeader':\n                case 'headerField':\n                case 'contentField':\n                case 'template':\n                case 'tagsField':\n                case 'grabberField':\n                case 'footerCssField':\n                    this.layoutModule.refreshCards();\n                    break;\n                case 'selectionType':\n                    cards = this.getSelectedCards();\n                    if (cards.length > 0) {\n                        removeClass(cards, cls.CARD_SELECTION_CLASS);\n                        this.layoutModule.disableAttributeSelection(cards);\n                    }\n                    break;\n            }\n        }\n    };\n    Kanban.prototype.initializeModules = function () {\n        this.dataModule = new Data(this);\n        this.layoutModule = new LayoutRender(this);\n        if (this.allowKeyboard) {\n            this.keyboardModule = new Keyboard(this);\n        }\n        this.actionModule = new Action(this);\n        this.crudModule = new Crud(this);\n        this.dragAndDropModule = new DragAndDrop(this);\n        this.dialogModule = new KanbanDialog(this);\n        if (this.enableTooltip) {\n            this.tooltipModule = new KanbanTooltip(this);\n        }\n        if (Browser.isDevice || Browser.isTouch) {\n            this.touchModule = new KanbanTouch(this);\n        }\n    };\n    Kanban.prototype.renderTemplates = function () {\n        if (this.isReact) {\n            this.renderReactTemplates();\n        }\n    };\n    Kanban.prototype.resetTemplates = function (templates) {\n        if (this.isReact) {\n            this.clearTemplate(templates);\n        }\n    };\n    Kanban.prototype.destroyModules = function () {\n        if (this.layoutModule) {\n            this.layoutModule.destroy();\n            this.layoutModule = null;\n        }\n        if (this.keyboardModule) {\n            this.keyboardModule.destroy();\n            this.keyboardModule = null;\n        }\n        if (this.touchModule) {\n            this.touchModule.destroy();\n            this.touchModule = null;\n        }\n        this.dialogModule = null;\n        this.actionModule = null;\n        this.crudModule = null;\n        this.dataModule = null;\n        this.dragAndDropModule = null;\n    };\n    Kanban.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                return compile(template);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Returns the card details based on card ID from the board.\n     *\n     * @function getCardDetails\n     * @param {Element} target Accepts the card element to get the details.\n     * @returns {Object} Returns the card details based on given target.\n     */\n    Kanban.prototype.getCardDetails = function (target) {\n        var _this = this;\n        var isNumeric = typeof (this.kanbanData[0])[this.cardSettings.headerField] === 'number';\n        var targetId = isNumeric ? parseInt(target.getAttribute('data-id'), 10) : target.getAttribute('data-id');\n        var cardObj = this.kanbanData.filter(function (data) {\n            return data[_this.cardSettings.headerField] === targetId;\n        })[0];\n        return cardObj;\n    };\n    /**\n     * Returns the column data based on column key input.\n     *\n     * @function getColumnData\n     * @param {string | number} columnKey Accepts the column key to get the objects.\n     * @param {Object[]} dataSource Accepts the collection of objects to get the results based on given columnKey.\n     * @returns {Object[]} Returns the collection of card objects based on given inputs.\n     */\n    Kanban.prototype.getColumnData = function (columnKey, dataSource) {\n        return this.layoutModule.getColumnCards(dataSource)[columnKey] || [];\n    };\n    /**\n     * Returns the swimlane column data based on swimlane keyField input.\n     *\n     * @function getSwimlaneData\n     * @param {string} keyField Accepts the swimlane keyField to get the objects.\n     * @returns {Object[]} Returns the collection of card objects based on given inputs.\n     */\n    Kanban.prototype.getSwimlaneData = function (keyField) {\n        return this.layoutModule.getSwimlaneCards()[keyField] || [];\n    };\n    /**\n     * Gets the list of selected cards from the board.\n     *\n     * @function getSelectedCards\n     * @returns {HTMLElement[]} Returns the card elements based on selection.\n     */\n    Kanban.prototype.getSelectedCards = function () {\n        return [].slice.call(this.element.querySelectorAll('.' + cls.CARD_CLASS + '.' + cls.CARD_SELECTION_CLASS));\n    };\n    /**\n     * Allows you to show the spinner on Kanban at the required scenarios.\n     *\n     * @function showSpinner\n     * @returns {void}\n     */\n    Kanban.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * When the spinner is shown manually using the showSpinner method, it can be hidden using this `hideSpinner` method.\n     *\n     * @function hideSpinner\n     * @returns {void}\n     */\n    Kanban.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * To manually open the dialog.\n     *\n     * @function openDialog\n     * @param {CurrentAction} action Accepts the action for which the dialog needs to be opened such as either for new card creation or\n     *  editing of existing cards. The applicable action names are `Add` and `Edit`.\n     * @param {Object} data It can be card data.\n     * @returns {void}\n     */\n    Kanban.prototype.openDialog = function (action, data) {\n        this.dialogModule.openDialog(action, data);\n    };\n    /**\n     * To manually close the dialog.\n     *\n     * @function closeDialog\n     * @returns {void}\n     */\n    Kanban.prototype.closeDialog = function () {\n        this.dialogModule.closeDialog();\n    };\n    /**\n     * Adds the new card to the data source of Kanban and layout.\n     *\n     * @function addCard\n     * @param {Object | Object[]} cardData Accepts Single card object or Collection of card objects to be added into Kanban.\n     * @param {number} index Accepts the index to insert the card in column.\n     * @returns {void}\n     */\n    Kanban.prototype.addCard = function (cardData, index) {\n        this.crudModule.addCard(cardData, index);\n    };\n    /**\n     * Updates the changes made in the card object by passing it as a parameter to the data source.\n     *\n     * @function updateCard\n     * @param {Object | Object[]} cardData Accepts Single card object or Collection of card objects to be updated into Kanban.\n     * @param {number} index Accepts the index to update the card in column.\n     * @returns {void}\n     */\n    Kanban.prototype.updateCard = function (cardData, index) {\n        this.crudModule.updateCard(cardData, index);\n    };\n    /**\n     * Deletes the card based on the provided ID or card collection in the argument list.\n     *\n     * @function deleteCard\n     * @param {string | number | Object | Object[]} cardData Accepts the ID of the remove card in string or number type or\n     * Single card object or Collection of card objects to be removed from Kanban\n     * @returns {void}\n     */\n    Kanban.prototype.deleteCard = function (cardData) {\n        this.crudModule.deleteCard(cardData);\n    };\n    /**\n     * Add the column to Kanban board dynamically based on the provided column options and index in the argument list.\n     *\n     * @function addColumn\n     * @param {ColumnsModel} columnOptions Accepts the properties to new column that are going to be added in the board.\n     * @param {number} index Accepts the index of column to add the new column.\n     * @returns {void}\n     */\n    Kanban.prototype.addColumn = function (columnOptions, index) {\n        this.actionModule.addColumn(columnOptions, index);\n    };\n    /**\n     * Deletes the column based on the provided index value.\n     *\n     * @function deleteColumn\n     * @param {number} index Accepts the index of column to delete the existing column from Kanban board.\n     * @returns {void}\n     */\n    Kanban.prototype.deleteColumn = function (index) {\n        this.actionModule.deleteColumn(index);\n    };\n    /**\n     * Shows the column from hidden based on the provided key in the columns.\n     *\n     * @function showColumn\n     * @param {string | number} key Accepts the hidden column key name to be shown from the hidden state in board.\n     * @returns {void}\n     */\n    Kanban.prototype.showColumn = function (key) {\n        this.actionModule.showColumn(key);\n    };\n    /**\n     * Hides the column from Kanban board based on the provided key in the columns.\n     *\n     * @function hideColumn\n     * @param {string | number} key Accepts the visible column key name to be hidden from the board.\n     * @returns {void}\n     */\n    Kanban.prototype.hideColumn = function (key) {\n        this.actionModule.hideColumn(key);\n    };\n    /**\n     * Method to refresh the Kanban UI based on modified records.\n     *\n     * @function refreshUI\n     * @param {ActionEventArgs} args Accepts the added, changed or deleted data.\n     * @param {number} index Accepts the index of the changed items.\n     * @returns {void}\n     */\n    Kanban.prototype.refreshUI = function (args, index) {\n        index = index ? index : 0;\n        this.dataModule.refreshUI(args, index);\n    };\n    /**\n     * Method to refresh the column header.\n     *\n     * @method refreshHeader\n     * @returns {void}\n     */\n    Kanban.prototype.refreshHeader = function () {\n        this.resetTemplates(['columnTemplate']);\n        if (this.layoutModule) {\n            this.layoutModule.refreshHeaders();\n        }\n        this.renderTemplates();\n    };\n    /**\n     * Removes the control from the DOM and detaches all its related event handlers. Also, it removes the attributes and classes.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Kanban.prototype.destroy = function () {\n        this.destroyModules();\n        [].slice.call(this.element.childNodes).forEach(function (node) { detach(node); });\n        var removeClasses = [cls.ROOT_CLASS];\n        if (this.cssClass) {\n            removeClasses = removeClasses.concat(this.cssClass.split(' '));\n        }\n        removeClass([this.element], removeClasses);\n        _super.prototype.destroy.call(this);\n    };\n    __decorate([\n        Property()\n    ], Kanban.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('auto')\n    ], Kanban.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], Kanban.prototype, \"height\", void 0);\n    __decorate([\n        Property([])\n    ], Kanban.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], Kanban.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], Kanban.prototype, \"keyField\", void 0);\n    __decorate([\n        Property('Column')\n    ], Kanban.prototype, \"constraintType\", void 0);\n    __decorate([\n        Property([])\n    ], Kanban.prototype, \"externalDropId\", void 0);\n    __decorate([\n        Collection([], Columns)\n    ], Kanban.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], Kanban.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Collection([], StackedHeaders)\n    ], Kanban.prototype, \"stackedHeaders\", void 0);\n    __decorate([\n        Complex({}, SwimlaneSettings)\n    ], Kanban.prototype, \"swimlaneSettings\", void 0);\n    __decorate([\n        Complex({}, CardSettings)\n    ], Kanban.prototype, \"cardSettings\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], Kanban.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Complex({}, DialogSettings)\n    ], Kanban.prototype, \"dialogSettings\", void 0);\n    __decorate([\n        Property(true)\n    ], Kanban.prototype, \"allowDragAndDrop\", void 0);\n    __decorate([\n        Property(false)\n    ], Kanban.prototype, \"enableTooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], Kanban.prototype, \"showEmptyColumn\", void 0);\n    __decorate([\n        Property(false)\n    ], Kanban.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        Property()\n    ], Kanban.prototype, \"tooltipTemplate\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"dataBinding\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"cardClick\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"cardDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"cardRendered\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"dialogOpen\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"dialogClose\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Kanban.prototype, \"dataSourceChanged\", void 0);\n    Kanban = __decorate([\n        NotifyPropertyChanges\n    ], Kanban);\n    return Kanban;\n}(Component));\nexport { Kanban };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
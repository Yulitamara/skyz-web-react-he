{"ast":null,"code":"var _jsxFileName = \"C:\\\\skyz-web-react-he\\\\src\\\\components\\\\Kanban.js\",\n  _s = $RefreshSig$();\n// // Kanban.js\n// import React, { useState } from \"react\";\n// import { DragDropContext } from \"react-beautiful-dnd\";\n// import \"../assets/scss/_kanban.scss\";\n// import KanbanColumn from \"./KanbanColumn\";\n\n// const Kanban = ({ data }) => {\n//   const [columnsData, setColumnsData] = useState({\n//     open: [\n//       {\n//         id: \"task-1\",\n//         title: \"Task 1\",\n//         description: \"Description for Task 1\",\n//         assignedTo: \"User A\",\n//         category: \"todo\",\n//       },\n//       {\n//         id: \"task-2\",\n//         title: \"Task 2\",\n//         description: \"Description for Task 2\",\n//         assignedTo: \"User B\",\n//         category: \"inProgress\",\n//       },\n//       {\n//         id: \"task-3\",\n//         title: \"Task 3\",\n//         description: \"Description for Task 3\",\n//         assignedTo: \"User C\",\n//         category: \"done\",\n//       },\n//       // ... other tasks\n//     ],\n//     ongoing: [\n//       // ... tasks for \"Ongoing\" column\n//     ],\n//     close: [\n//       // ... tasks for \"Close\" column\n//     ],\n//   });\n\n//   const onDragEnd = (result) => {\n//     const { destination, source, draggableId } = result;\n\n//     if (\n//       !destination ||\n//       (destination.droppableId === source.droppableId &&\n//         destination.index === source.index)\n//     ) {\n//       return;\n//     }\n\n//     const sourceTasks = [...columnsData[source.droppableId]];\n//     const destinationTasks = [...columnsData[destination.droppableId]];\n\n//     const draggedTask = sourceTasks.find((task) => task.id === draggableId);\n\n//     if (!draggedTask) {\n//       console.error(`Task with id ${draggableId} not found in source column.`);\n//       return;\n//     }\n\n//     if (destination.droppableId !== source.droppableId) {\n//       sourceTasks.splice(source.index, 1);\n//       destinationTasks.splice(destination.index, 0, draggedTask);\n\n//       setColumnsData((prevColumnsData) => ({\n//         ...prevColumnsData,\n//         [source.droppableId]: sourceTasks,\n//         [destination.droppableId]: destinationTasks,\n//       }));\n//     } else {\n//       sourceTasks.splice(source.index, 1);\n//       sourceTasks.splice(destination.index, 0, draggedTask);\n\n//       setColumnsData((prevColumnsData) => ({\n//         ...prevColumnsData,\n//         [source.droppableId]: sourceTasks,\n//       }));\n//     }\n//   };\n\n//   return (\n//     <DragDropContext onDragEnd={onDragEnd}>\n//       <div className=\"kanban\">\n//         <KanbanColumn id=\"open\" tasks={columnsData.open} />\n//         <KanbanColumn id=\"ongoing\" tasks={columnsData.ongoing} />\n//         <KanbanColumn id=\"close\" tasks={columnsData.close} />\n//       </div>\n//     </DragDropContext>\n//   );\n// };\n\n// export default Kanban;\n\n// Kanban.js\nimport React, { useState } from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport \"../assets/scss/_kanban.scss\";\nimport KanbanColumn from \"./KanbanColumn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Kanban = () => {\n  _s();\n  const [columnsData, setColumnsData] = useState({\n    open: {\n      todo: [{\n        id: \"task-1\",\n        title: \"Task 1\",\n        description: \"Description for Task 1\",\n        assignedTo: \"User A\"\n      }, {\n        id: \"task-2\",\n        title: \"Task 2\",\n        description: \"Description for Task 2\",\n        assignedTo: \"User B\"\n      }, {\n        id: \"task-3\",\n        title: \"Task 3\",\n        description: \"Description for Task 3\",\n        assignedTo: \"User C\"\n      }],\n      inProgress: [{\n        id: \"task-4\",\n        title: \"Task 4\",\n        description: \"Description for Task 4\",\n        assignedTo: \"User D\"\n      }, {\n        id: \"task-5\",\n        title: \"Task 5\",\n        description: \"Description for Task 5\",\n        assignedTo: \"User E\"\n      }],\n      done: [{\n        id: \"task-6\",\n        title: \"Task 6\",\n        description: \"Description for Task 6\",\n        assignedTo: \"User F\"\n      }]\n    },\n    ongoing: {\n      todo: [{\n        id: \"task-7\",\n        title: \"Task 7\",\n        description: \"Description for Task 7\",\n        assignedTo: \"User G\"\n      }],\n      inProgress: [{\n        id: \"task-8\",\n        title: \"Task 8\",\n        description: \"Description for Task 8\",\n        assignedTo: \"User H\"\n      }, {\n        id: \"task-9\",\n        title: \"Task 9\",\n        description: \"Description for Task 9\",\n        assignedTo: \"User I\"\n      }],\n      done: [{\n        id: \"task-10\",\n        title: \"Task 10\",\n        description: \"Description for Task 10\",\n        assignedTo: \"User J\"\n      }, {\n        id: \"task-11\",\n        title: \"Task 11\",\n        description: \"Description for Task 11\",\n        assignedTo: \"User K\"\n      }]\n    },\n    close: {\n      todo: [{\n        id: \"task-12\",\n        title: \"Task 12\",\n        description: \"Description for Task 12\",\n        assignedTo: \"User L\"\n      }],\n      inProgress: [{\n        id: \"task-13\",\n        title: \"Task 13\",\n        description: \"Description for Task 13\",\n        assignedTo: \"User M\"\n      }, {\n        id: \"task-14\",\n        title: \"Task 14\",\n        description: \"Description for Task 14\",\n        assignedTo: \"User N\"\n      }],\n      done: [{\n        id: \"task-15\",\n        title: \"Task 15\",\n        description: \"Description for Task 15\",\n        assignedTo: \"User O\"\n      }, {\n        id: \"task-16\",\n        title: \"Task 16\",\n        description: \"Description for Task 16\",\n        assignedTo: \"User P\"\n      }, {\n        id: \"task-17\",\n        title: \"Task 17\",\n        description: \"Description for Task 17\",\n        assignedTo: \"User Q\"\n      }]\n    }\n  });\n  const onDragEnd = result => {\n    console.log(result); // Log the result object to inspect its structure\n\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n    console.log(\"draggableId:\", draggableId); // Log draggableId\n\n    // If there's no destination or the task was dropped back into its original position, do nothing\n    if (!destination || destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    // Get the task list for the source and destination columns\n    const sourceTasks = [...columnsData[source.droppableId[0]][source.droppableId[1]]];\n    console.log(\"sourceTasks:\", sourceTasks); // Log sourceTasks\n\n    const destinationTasks = [...columnsData[destination.droppableId[0]][destination.droppableId[1]]];\n\n    // Find the task being dragged\n    const draggedTask = sourceTasks.find(task => task.id === draggableId);\n    if (!draggedTask) {\n      console.error(`Task with id ${draggableId} not found in source column.`);\n      return;\n    }\n\n    // Remove the task from the source column\n    sourceTasks.splice(source.index, 1);\n\n    // Insert the task into the destination column at the specified index\n    destinationTasks.splice(destination.index, 0, draggedTask);\n\n    // Update the state with the new task order\n    setColumnsData({\n      ...columnsData,\n      [source.droppableId[0]]: {\n        ...columnsData[source.droppableId[0]],\n        [source.droppableId[1]]: sourceTasks\n      },\n      [destination.droppableId[0]]: {\n        ...columnsData[destination.droppableId[0]],\n        [destination.droppableId[1]]: destinationTasks\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban\",\n      children: [/*#__PURE__*/_jsxDEV(KanbanColumn, {\n        id: \"open\",\n        columnData: columnsData.open\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KanbanColumn, {\n        id: \"ongoing\",\n        columnData: columnsData.ongoing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KanbanColumn, {\n        id: \"close\",\n        columnData: columnsData.close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n};\n_s(Kanban, \"A2a5MeEGpQhFb6/q4c086HxXuq0=\");\n_c = Kanban;\nexport default Kanban;\nvar _c;\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"names":["React","useState","DragDropContext","KanbanColumn","jsxDEV","_jsxDEV","Kanban","_s","columnsData","setColumnsData","open","todo","id","title","description","assignedTo","inProgress","done","ongoing","close","onDragEnd","result","console","log","destination","source","draggableId","droppableId","index","sourceTasks","destinationTasks","draggedTask","find","task","error","splice","children","className","columnData","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/skyz-web-react-he/src/components/Kanban.js"],"sourcesContent":["// // Kanban.js\r\n// import React, { useState } from \"react\";\r\n// import { DragDropContext } from \"react-beautiful-dnd\";\r\n// import \"../assets/scss/_kanban.scss\";\r\n// import KanbanColumn from \"./KanbanColumn\";\r\n\r\n// const Kanban = ({ data }) => {\r\n//   const [columnsData, setColumnsData] = useState({\r\n//     open: [\r\n//       {\r\n//         id: \"task-1\",\r\n//         title: \"Task 1\",\r\n//         description: \"Description for Task 1\",\r\n//         assignedTo: \"User A\",\r\n//         category: \"todo\",\r\n//       },\r\n//       {\r\n//         id: \"task-2\",\r\n//         title: \"Task 2\",\r\n//         description: \"Description for Task 2\",\r\n//         assignedTo: \"User B\",\r\n//         category: \"inProgress\",\r\n//       },\r\n//       {\r\n//         id: \"task-3\",\r\n//         title: \"Task 3\",\r\n//         description: \"Description for Task 3\",\r\n//         assignedTo: \"User C\",\r\n//         category: \"done\",\r\n//       },\r\n//       // ... other tasks\r\n//     ],\r\n//     ongoing: [\r\n//       // ... tasks for \"Ongoing\" column\r\n//     ],\r\n//     close: [\r\n//       // ... tasks for \"Close\" column\r\n//     ],\r\n//   });\r\n\r\n//   const onDragEnd = (result) => {\r\n//     const { destination, source, draggableId } = result;\r\n\r\n//     if (\r\n//       !destination ||\r\n//       (destination.droppableId === source.droppableId &&\r\n//         destination.index === source.index)\r\n//     ) {\r\n//       return;\r\n//     }\r\n\r\n//     const sourceTasks = [...columnsData[source.droppableId]];\r\n//     const destinationTasks = [...columnsData[destination.droppableId]];\r\n\r\n//     const draggedTask = sourceTasks.find((task) => task.id === draggableId);\r\n\r\n//     if (!draggedTask) {\r\n//       console.error(`Task with id ${draggableId} not found in source column.`);\r\n//       return;\r\n//     }\r\n\r\n//     if (destination.droppableId !== source.droppableId) {\r\n//       sourceTasks.splice(source.index, 1);\r\n//       destinationTasks.splice(destination.index, 0, draggedTask);\r\n\r\n//       setColumnsData((prevColumnsData) => ({\r\n//         ...prevColumnsData,\r\n//         [source.droppableId]: sourceTasks,\r\n//         [destination.droppableId]: destinationTasks,\r\n//       }));\r\n//     } else {\r\n//       sourceTasks.splice(source.index, 1);\r\n//       sourceTasks.splice(destination.index, 0, draggedTask);\r\n\r\n//       setColumnsData((prevColumnsData) => ({\r\n//         ...prevColumnsData,\r\n//         [source.droppableId]: sourceTasks,\r\n//       }));\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <DragDropContext onDragEnd={onDragEnd}>\r\n//       <div className=\"kanban\">\r\n//         <KanbanColumn id=\"open\" tasks={columnsData.open} />\r\n//         <KanbanColumn id=\"ongoing\" tasks={columnsData.ongoing} />\r\n//         <KanbanColumn id=\"close\" tasks={columnsData.close} />\r\n//       </div>\r\n//     </DragDropContext>\r\n//   );\r\n// };\r\n\r\n// export default Kanban;\r\n\r\n// Kanban.js\r\nimport React, { useState } from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport \"../assets/scss/_kanban.scss\";\r\nimport KanbanColumn from \"./KanbanColumn\";\r\n\r\nconst Kanban = () => {\r\n  const [columnsData, setColumnsData] = useState({\r\n    open: {\r\n      todo: [\r\n        {\r\n          id: \"task-1\",\r\n          title: \"Task 1\",\r\n          description: \"Description for Task 1\",\r\n          assignedTo: \"User A\",\r\n        },\r\n        {\r\n          id: \"task-2\",\r\n          title: \"Task 2\",\r\n          description: \"Description for Task 2\",\r\n          assignedTo: \"User B\",\r\n        },\r\n        {\r\n          id: \"task-3\",\r\n          title: \"Task 3\",\r\n          description: \"Description for Task 3\",\r\n          assignedTo: \"User C\",\r\n        },\r\n      ],\r\n      inProgress: [\r\n        {\r\n          id: \"task-4\",\r\n          title: \"Task 4\",\r\n          description: \"Description for Task 4\",\r\n          assignedTo: \"User D\",\r\n        },\r\n        {\r\n          id: \"task-5\",\r\n          title: \"Task 5\",\r\n          description: \"Description for Task 5\",\r\n          assignedTo: \"User E\",\r\n        },\r\n      ],\r\n      done: [\r\n        {\r\n          id: \"task-6\",\r\n          title: \"Task 6\",\r\n          description: \"Description for Task 6\",\r\n          assignedTo: \"User F\",\r\n        },\r\n      ],\r\n    },\r\n    ongoing: {\r\n      todo: [\r\n        {\r\n          id: \"task-7\",\r\n          title: \"Task 7\",\r\n          description: \"Description for Task 7\",\r\n          assignedTo: \"User G\",\r\n        },\r\n      ],\r\n      inProgress: [\r\n        {\r\n          id: \"task-8\",\r\n          title: \"Task 8\",\r\n          description: \"Description for Task 8\",\r\n          assignedTo: \"User H\",\r\n        },\r\n        {\r\n          id: \"task-9\",\r\n          title: \"Task 9\",\r\n          description: \"Description for Task 9\",\r\n          assignedTo: \"User I\",\r\n        },\r\n      ],\r\n      done: [\r\n        {\r\n          id: \"task-10\",\r\n          title: \"Task 10\",\r\n          description: \"Description for Task 10\",\r\n          assignedTo: \"User J\",\r\n        },\r\n        {\r\n          id: \"task-11\",\r\n          title: \"Task 11\",\r\n          description: \"Description for Task 11\",\r\n          assignedTo: \"User K\",\r\n        },\r\n      ],\r\n    },\r\n    close: {\r\n      todo: [\r\n        {\r\n          id: \"task-12\",\r\n          title: \"Task 12\",\r\n          description: \"Description for Task 12\",\r\n          assignedTo: \"User L\",\r\n        },\r\n      ],\r\n      inProgress: [\r\n        {\r\n          id: \"task-13\",\r\n          title: \"Task 13\",\r\n          description: \"Description for Task 13\",\r\n          assignedTo: \"User M\",\r\n        },\r\n        {\r\n          id: \"task-14\",\r\n          title: \"Task 14\",\r\n          description: \"Description for Task 14\",\r\n          assignedTo: \"User N\",\r\n        },\r\n      ],\r\n      done: [\r\n        {\r\n          id: \"task-15\",\r\n          title: \"Task 15\",\r\n          description: \"Description for Task 15\",\r\n          assignedTo: \"User O\",\r\n        },\r\n        {\r\n          id: \"task-16\",\r\n          title: \"Task 16\",\r\n          description: \"Description for Task 16\",\r\n          assignedTo: \"User P\",\r\n        },\r\n        {\r\n          id: \"task-17\",\r\n          title: \"Task 17\",\r\n          description: \"Description for Task 17\",\r\n          assignedTo: \"User Q\",\r\n        },\r\n      ],\r\n    },\r\n  });\r\n\r\n  const onDragEnd = (result) => {\r\n    console.log(result); // Log the result object to inspect its structure\r\n\r\n    const { destination, source, draggableId } = result;\r\n    console.log(\"draggableId:\", draggableId); // Log draggableId\r\n\r\n    // If there's no destination or the task was dropped back into its original position, do nothing\r\n    if (\r\n      !destination ||\r\n      (destination.droppableId === source.droppableId &&\r\n        destination.index === source.index)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // Get the task list for the source and destination columns\r\n    const sourceTasks = [\r\n      ...columnsData[source.droppableId[0]][source.droppableId[1]],\r\n    ];\r\n    console.log(\"sourceTasks:\", sourceTasks); // Log sourceTasks\r\n\r\n    const destinationTasks = [\r\n      ...columnsData[destination.droppableId[0]][destination.droppableId[1]],\r\n    ];\r\n\r\n    // Find the task being dragged\r\n    const draggedTask = sourceTasks.find((task) => task.id === draggableId);\r\n\r\n    if (!draggedTask) {\r\n      console.error(`Task with id ${draggableId} not found in source column.`);\r\n      return;\r\n    }\r\n\r\n    // Remove the task from the source column\r\n    sourceTasks.splice(source.index, 1);\r\n\r\n    // Insert the task into the destination column at the specified index\r\n    destinationTasks.splice(destination.index, 0, draggedTask);\r\n\r\n    // Update the state with the new task order\r\n    setColumnsData({\r\n      ...columnsData,\r\n      [source.droppableId[0]]: {\r\n        ...columnsData[source.droppableId[0]],\r\n        [source.droppableId[1]]: sourceTasks,\r\n      },\r\n      [destination.droppableId[0]]: {\r\n        ...columnsData[destination.droppableId[0]],\r\n        [destination.droppableId[1]]: destinationTasks,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div className=\"kanban\">\r\n        <KanbanColumn id=\"open\" columnData={columnsData.open} />\r\n        <KanbanColumn id=\"ongoing\" columnData={columnsData.ongoing} />\r\n        <KanbanColumn id=\"close\" columnData={columnsData.close} />\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default Kanban;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
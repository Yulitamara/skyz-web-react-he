{"ast":null,"code":"var _jsxFileName = \"C:\\\\skyz-web-react-he\\\\src\\\\components\\\\Kanban.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport \"../assets/scss/_kanban.scss\";\nimport KanbanColumn from \"./KanbanColumn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Kanban = () => {\n  _s();\n  const [tasks, setTasks] = useState({\n    columnId: {\n      title: \"Column 1\",\n      taskIds: {\n        task1: {\n          title: \"Task 1\",\n          description: \"Description 1\"\n        },\n        task2: {\n          title: \"Task 2\",\n          description: \"Description 2\"\n        },\n        task3: {\n          title: \"Task 3\",\n          description: \"Description 3\"\n        }\n      }\n    },\n    columnId2: {\n      title: \"Column 2\",\n      taskIds: {\n        task4: {\n          title: \"Task 4\",\n          description: \"Description 4\"\n        },\n        task5: {\n          title: \"Task 5\",\n          description: \"Description 5\"\n        },\n        task6: {\n          title: \"Task 6\",\n          description: \"Description 6\"\n        }\n      }\n    },\n    columnId3: {\n      title: \"Column 3\",\n      taskIds: [\"task7\", \"task8\", \"task9\"]\n    }\n  });\n  const onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n    if (!destination || destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n    const newTasks = {\n      ...tasks\n    };\n    const sourceColumn = newTasks[source.droppableId];\n    const destinationColumn = newTasks[destination.droppableId];\n    sourceColumn.taskIds.splice(source.index, 1);\n    destinationColumn.taskIds.splice(destination.index, 0, draggableId);\n    setTasks(newTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban\",\n      children: [/*#__PURE__*/_jsxDEV(KanbanColumn, {\n        columnId: \"columnId\",\n        tasks: tasks,\n        subtitle: \"sub1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KanbanColumn, {\n        columnId: \"columnId2\",\n        tasks: tasks,\n        subtitle: \"sub2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KanbanColumn, {\n        columnId: \"columnId3\",\n        tasks: tasks,\n        subtitle: \"sub3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Kanban, \"Hz4RQ/NO2s48VSi9vriRnDrAln8=\");\n_c = Kanban;\nexport default Kanban;\nvar _c;\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"names":["React","useState","DragDropContext","KanbanColumn","jsxDEV","_jsxDEV","Kanban","_s","tasks","setTasks","columnId","title","taskIds","task1","description","task2","task3","columnId2","task4","task5","task6","columnId3","onDragEnd","result","destination","source","draggableId","droppableId","index","newTasks","sourceColumn","destinationColumn","splice","children","className","subtitle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/skyz-web-react-he/src/components/Kanban.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport \"../assets/scss/_kanban.scss\";\r\nimport KanbanColumn from \"./KanbanColumn\";\r\n\r\nconst Kanban = () => {\r\n  const [tasks, setTasks] = useState({\r\n    columnId: {\r\n      title: \"Column 1\",\r\n      taskIds: {\r\n        task1: { title: \"Task 1\", description: \"Description 1\" },\r\n        task2: { title: \"Task 2\", description: \"Description 2\" },\r\n        task3: { title: \"Task 3\", description: \"Description 3\" },\r\n      },\r\n    },\r\n    columnId2: {\r\n      title: \"Column 2\",\r\n      taskIds: {\r\n        task4: { title: \"Task 4\", description: \"Description 4\" },\r\n        task5: { title: \"Task 5\", description: \"Description 5\" },\r\n        task6: { title: \"Task 6\", description: \"Description 6\" },\r\n      },\r\n    },\r\n    columnId3: {\r\n      title: \"Column 3\",\r\n      taskIds: [\"task7\", \"task8\", \"task9\"],\r\n    },\r\n  });\r\n\r\n  const onDragEnd = (result) => {\r\n    const { destination, source, draggableId } = result;\r\n\r\n    if (\r\n      !destination ||\r\n      (destination.droppableId === source.droppableId &&\r\n        destination.index === source.index)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const newTasks = { ...tasks };\r\n    const sourceColumn = newTasks[source.droppableId];\r\n    const destinationColumn = newTasks[destination.droppableId];\r\n\r\n    sourceColumn.taskIds.splice(source.index, 1);\r\n    destinationColumn.taskIds.splice(destination.index, 0, draggableId);\r\n\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div className=\"kanban\">\r\n        <KanbanColumn columnId=\"columnId\" tasks={tasks} subtitle=\"sub1\" />\r\n        <KanbanColumn columnId=\"columnId2\" tasks={tasks} subtitle=\"sub2\" />\r\n        <KanbanColumn columnId=\"columnId3\" tasks={tasks} subtitle=\"sub3\" />\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default Kanban;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,QAAQ,qBAAqB;AACrD,OAAO,6BAA6B;AACpC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC;IACjCS,QAAQ,EAAE;MACRC,KAAK,EAAE,UAAU;MACjBC,OAAO,EAAE;QACPC,KAAK,EAAE;UAAEF,KAAK,EAAE,QAAQ;UAAEG,WAAW,EAAE;QAAgB,CAAC;QACxDC,KAAK,EAAE;UAAEJ,KAAK,EAAE,QAAQ;UAAEG,WAAW,EAAE;QAAgB,CAAC;QACxDE,KAAK,EAAE;UAAEL,KAAK,EAAE,QAAQ;UAAEG,WAAW,EAAE;QAAgB;MACzD;IACF,CAAC;IACDG,SAAS,EAAE;MACTN,KAAK,EAAE,UAAU;MACjBC,OAAO,EAAE;QACPM,KAAK,EAAE;UAAEP,KAAK,EAAE,QAAQ;UAAEG,WAAW,EAAE;QAAgB,CAAC;QACxDK,KAAK,EAAE;UAAER,KAAK,EAAE,QAAQ;UAAEG,WAAW,EAAE;QAAgB,CAAC;QACxDM,KAAK,EAAE;UAAET,KAAK,EAAE,QAAQ;UAAEG,WAAW,EAAE;QAAgB;MACzD;IACF,CAAC;IACDO,SAAS,EAAE;MACTV,KAAK,EAAE,UAAU;MACjBC,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO;IACrC;EACF,CAAC,CAAC;EAEF,MAAMU,SAAS,GAAIC,MAAM,IAAK;IAC5B,MAAM;MAAEC,WAAW;MAAEC,MAAM;MAAEC;IAAY,CAAC,GAAGH,MAAM;IAEnD,IACE,CAACC,WAAW,IACXA,WAAW,CAACG,WAAW,KAAKF,MAAM,CAACE,WAAW,IAC7CH,WAAW,CAACI,KAAK,KAAKH,MAAM,CAACG,KAAM,EACrC;MACA;IACF;IAEA,MAAMC,QAAQ,GAAG;MAAE,GAAGrB;IAAM,CAAC;IAC7B,MAAMsB,YAAY,GAAGD,QAAQ,CAACJ,MAAM,CAACE,WAAW,CAAC;IACjD,MAAMI,iBAAiB,GAAGF,QAAQ,CAACL,WAAW,CAACG,WAAW,CAAC;IAE3DG,YAAY,CAAClB,OAAO,CAACoB,MAAM,CAACP,MAAM,CAACG,KAAK,EAAE,CAAC,CAAC;IAC5CG,iBAAiB,CAACnB,OAAO,CAACoB,MAAM,CAACR,WAAW,CAACI,KAAK,EAAE,CAAC,EAAEF,WAAW,CAAC;IAEnEjB,QAAQ,CAACoB,QAAQ,CAAC;EACpB,CAAC;EAED,oBACExB,OAAA,CAACH,eAAe;IAACoB,SAAS,EAAEA,SAAU;IAAAW,QAAA,eACpC5B,OAAA;MAAK6B,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACrB5B,OAAA,CAACF,YAAY;QAACO,QAAQ,EAAC,UAAU;QAACF,KAAK,EAAEA,KAAM;QAAC2B,QAAQ,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClElC,OAAA,CAACF,YAAY;QAACO,QAAQ,EAAC,WAAW;QAACF,KAAK,EAAEA,KAAM;QAAC2B,QAAQ,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnElC,OAAA,CAACF,YAAY;QAACO,QAAQ,EAAC,WAAW;QAACF,KAAK,EAAEA,KAAM;QAAC2B,QAAQ,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEtB,CAAC;AAAChC,EAAA,CAtDID,MAAM;AAAAkC,EAAA,GAANlC,MAAM;AAwDZ,eAAeA,MAAM;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
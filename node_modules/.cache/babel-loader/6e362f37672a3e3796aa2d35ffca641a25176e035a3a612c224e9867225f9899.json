{"ast":null,"code":"var _jsxFileName = \"C:\\\\skyz-web-react-he\\\\src\\\\components\\\\Kanban.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { DragDropContext } from \"react-beautiful-dnd\";\n// import \"../assets/scss/_kanban.scss\";\n// import KanbanColumn from \"./KanbanColumn\";\n\n// const Kanban = () => {\n//   const [tasks, setTasks] = useState({\n//     columnId: {\n//       title: \"Column 1\",\n//       taskIds: [\"task1\", \"task2\", \"task3\"],\n//     },\n//     columnId2: {\n//       title: \"Column 2\",\n//       taskIds: [\"task4\", \"task5\", \"task6\"],\n//     },\n//     columnId3: {\n//       title: \"Column 3\",\n//       taskIds: [\"task7\", \"task8\", \"task9\"],\n//     },\n//   });\n\n//   const onDragEnd = (result) => {\n//     const { destination, source, draggableId } = result;\n\n//     if (\n//       !destination ||\n//       (destination.droppableId === source.droppableId &&\n//         destination.index === source.index)\n//     ) {\n//       return;\n//     }\n\n//     const newTasks = { ...tasks };\n//     const sourceColumn = newTasks[source.droppableId];\n//     const destinationColumn = newTasks[destination.droppableId];\n\n//     sourceColumn.taskIds.splice(source.index, 1);\n//     destinationColumn.taskIds.splice(destination.index, 0, draggableId);\n\n//     setTasks(newTasks);\n//   };\n\n//   return (\n//     <DragDropContext onDragEnd={onDragEnd}>\n//       <div className=\"kanban\">\n//         <KanbanColumn columnId=\"columnId\" tasks={tasks} />\n//         <KanbanColumn columnId=\"columnId2\" tasks={tasks} />\n//         <KanbanColumn columnId=\"columnId3\" tasks={tasks} />\n//       </div>\n//     </DragDropContext>\n//   );\n// };\n\n// export default Kanban;\nimport React from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport \"../assets/scss/_kanban.scss\";\nimport KanbanColumn from \"./KanbanColumn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Kanban = () => {\n  _s();\n  const [tasks, setTasks] = useState({\n    columnId: {\n      title: \"Column 1\",\n      taskIds: [\"task1\", \"task2\", \"task3\"],\n      tasks: {\n        task1: {\n          name: \"Task 1\",\n          description: \"This is the description of Task 1\"\n        },\n        task2: {\n          name: \"Task 2\",\n          description: \"This is the description of Task 2\"\n        },\n        task3: {\n          name: \"Task 3\",\n          description: \"This is the description of Task 3\"\n        }\n      }\n    },\n    columnId2: {\n      title: \"Column 2\",\n      taskIds: [\"task4\", \"task5\", \"task6\"],\n      tasks: {\n        task4: {\n          name: \"Task 4\",\n          description: \"This is the description of Task 4\"\n        },\n        task5: {\n          name: \"Task 5\",\n          description: \"This is the description of Task 5\"\n        },\n        task6: {\n          name: \"Task 6\",\n          description: \"This is the description of Task 6\"\n        }\n      }\n    },\n    columnId3: {\n      title: \"Column 3\",\n      taskIds: [\"task7\", \"task8\", \"task9\"],\n      tasks: {\n        task7: {\n          name: \"Task 7\",\n          description: \"This is the description of Task 7\"\n        },\n        task8: {\n          name: \"Task 8\",\n          description: \"This is the description of Task 8\"\n        },\n        task9: {\n          name: \"Task 9\",\n          description: \"This is the description of Task 9\"\n        }\n      }\n    }\n  });\n  const onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n    if (!destination || destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n    constTasks = {\n      ...tasks\n    };\n    const sourceColumn = newTasks[source.droppableId];\n    const destinationColumn = newTasks[destination.droppableId];\n    sourceColumn.taskIds.splice(source.index, 1);\n    destinationColumn.taskIds.splice(destination.index, 0, draggableId);\n    setTasks(newTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban\",\n      children: [/*#__PURE__*/_jsxDEV(KanbanColumn, {\n        columnId: \"columnId\",\n        tasks: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KanbanColumn, {\n        columnId: \"columnId2\",\n        tasks: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KanbanColumn, {\n        columnId: \"columnId3\",\n        tasks: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(Kanban, \"IgPmDIc7ANlqOdMwoH6F+s3Pnac=\");\n_c = Kanban;\nexport default Kanban;\nvar _c;\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"names":["React","DragDropContext","KanbanColumn","jsxDEV","_jsxDEV","Kanban","_s","tasks","setTasks","useState","columnId","title","taskIds","task1","name","description","task2","task3","columnId2","task4","task5","task6","columnId3","task7","task8","task9","onDragEnd","result","destination","source","draggableId","droppableId","index","constTasks","sourceColumn","newTasks","destinationColumn","splice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/skyz-web-react-he/src/components/Kanban.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { DragDropContext } from \"react-beautiful-dnd\";\r\n// import \"../assets/scss/_kanban.scss\";\r\n// import KanbanColumn from \"./KanbanColumn\";\r\n\r\n\r\n\r\n// const Kanban = () => {\r\n//   const [tasks, setTasks] = useState({\r\n//     columnId: {\r\n//       title: \"Column 1\",\r\n//       taskIds: [\"task1\", \"task2\", \"task3\"],\r\n//     },\r\n//     columnId2: {\r\n//       title: \"Column 2\",\r\n//       taskIds: [\"task4\", \"task5\", \"task6\"],\r\n//     },\r\n//     columnId3: {\r\n//       title: \"Column 3\",\r\n//       taskIds: [\"task7\", \"task8\", \"task9\"],\r\n//     },\r\n//   });\r\n\r\n//   const onDragEnd = (result) => {\r\n//     const { destination, source, draggableId } = result;\r\n\r\n//     if (\r\n//       !destination ||\r\n//       (destination.droppableId === source.droppableId &&\r\n//         destination.index === source.index)\r\n//     ) {\r\n//       return;\r\n//     }\r\n\r\n//     const newTasks = { ...tasks };\r\n//     const sourceColumn = newTasks[source.droppableId];\r\n//     const destinationColumn = newTasks[destination.droppableId];\r\n\r\n//     sourceColumn.taskIds.splice(source.index, 1);\r\n//     destinationColumn.taskIds.splice(destination.index, 0, draggableId);\r\n\r\n//     setTasks(newTasks);\r\n//   };\r\n\r\n//   return (\r\n//     <DragDropContext onDragEnd={onDragEnd}>\r\n//       <div className=\"kanban\">\r\n//         <KanbanColumn columnId=\"columnId\" tasks={tasks} />\r\n//         <KanbanColumn columnId=\"columnId2\" tasks={tasks} />\r\n//         <KanbanColumn columnId=\"columnId3\" tasks={tasks} />\r\n//       </div>\r\n//     </DragDropContext>\r\n//   );\r\n// };\r\n\r\n// export default Kanban;\r\nimport React from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport \"../assets/scss/_kanban.scss\";\r\nimport KanbanColumn from \"./KanbanColumn\";\r\n\r\nconst Kanban = () => {\r\n  const [tasks, setTasks] = useState({\r\n    columnId: {\r\n      title: \"Column 1\",\r\n      taskIds: [\"task1\", \"task2\", \"task3\"],\r\n      tasks: {\r\n        task1: { name: \"Task 1\", description: \"This is the description of Task 1\" },\r\n        task2: { name: \"Task 2\", description: \"This is the description of Task 2\" },\r\n        task3: { name: \"Task 3\", description: \"This is the description of Task 3\" },\r\n      },\r\n    },\r\n    columnId2: {\r\n      title: \"Column 2\",\r\n      taskIds: [\"task4\", \"task5\", \"task6\"],\r\n      tasks: {\r\n        task4: { name: \"Task 4\", description: \"This is the description of Task 4\" },\r\n        task5: { name: \"Task 5\", description: \"This is the description of Task 5\" },\r\n        task6: { name: \"Task 6\", description: \"This is the description of Task 6\" },\r\n      },\r\n    },\r\n    columnId3: {\r\n      title: \"Column 3\",\r\n      taskIds: [\"task7\", \"task8\", \"task9\"],\r\n      tasks: {\r\n        task7: { name: \"Task 7\", description: \"This is the description of Task 7\" },\r\n        task8: { name: \"Task 8\", description: \"This is the description of Task 8\" },\r\n        task9: { name: \"Task 9\", description: \"This is the description of Task 9\" },\r\n      },\r\n    },\r\n  });\r\n\r\n  const onDragEnd = (result) => {\r\n    const { destination, source, draggableId } = result;\r\n\r\n    if (\r\n      !destination ||\r\n      (destination.droppableId === source.droppableId &&\r\n        destination.index === source.index)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    constTasks = { ...tasks };\r\n    const sourceColumn = newTasks[source.droppableId];\r\n    const destinationColumn = newTasks[destination.droppableId];\r\n\r\n    sourceColumn.taskIds.splice(source.index, 1);\r\n    destinationColumn.taskIds.splice(destination.index, 0, draggableId);\r\n\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div className=\"kanban\">\r\n        <KanbanColumn columnId=\"columnId\" tasks={tasks} />\r\n        <KanbanColumn columnId=\"columnId2\" tasks={tasks} />\r\n        <KanbanColumn columnId=\"columnId3\" tasks={tasks} />\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default Kanban;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
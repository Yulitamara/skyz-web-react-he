{"ast":null,"code":"var _jsxFileName = \"C:\\\\skyz-web-react-he\\\\src\\\\components\\\\Kanban.js\",\n  _s = $RefreshSig$();\n// Kanban.js\nimport React, { useState } from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport \"../assets/scss/_kanban.scss\";\nimport KanbanColumn from \"./KanbanColumn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Kanban = _ref => {\n  _s();\n  let {\n    data\n  } = _ref;\n  const [columnsData, setColumnsData] = useState({\n    open: [{\n      id: \"task-1\",\n      title: \"Task 1\",\n      description: \"Description for Task 1\",\n      assignedTo: \"User A\",\n      status: \"todo\"\n    }\n    // ... other tasks\n    ],\n\n    ongoing: [{\n      id: \"task-2\",\n      title: \"Task 2\",\n      description: \"Description for Task 2\",\n      assignedTo: \"User B\",\n      status: \"inProgress\"\n    }\n    // ... other tasks\n    ],\n\n    close: [{\n      id: \"task-3\",\n      title: \"Task 3\",\n      description: \"Description for Task 3\",\n      assignedTo: \"User C\",\n      status: \"done\"\n    }\n    // ... other tasks\n    ]\n  });\n\n  const onDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId\n    } = result;\n    console.log(\"Drag Result:\", result);\n\n    // If there's no destination or the task was dropped back into its original position, do nothing\n    if (!destination || destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    // Get the task list for the source and destination columns\n    const sourceTasks = columnsData[source.droppableId];\n    const destinationTasks = columnsData[destination.droppableId];\n\n    // Log additional information for debugging\n    console.log(\"Source Tasks:\", sourceTasks);\n    console.log(\"Destination Tasks:\", destinationTasks);\n    if (!draggedTask) {\n      console.error(`Task with id ${draggableId} not found in source column.`);\n      return;\n    }\n\n    // If the destination column is different from the source column\n    if (destination.droppableId !== source.droppableId) {\n      // Remove the task from the source column\n      sourceTasks.splice(source.index, 1);\n\n      // Insert the task into the destination column at the specified index\n      destinationTasks.splice(destination.index, 0, draggedTask);\n\n      // Update the state with the new task order\n      setColumnsData({\n        ...columnsData,\n        [source.droppableId]: sourceTasks,\n        [destination.droppableId]: destinationTasks\n      });\n    } else {\n      // If the destination column is the same as the source column, reordering within the same column\n      sourceTasks.splice(source.index, 1);\n      sourceTasks.splice(destination.index, 0, draggedTask);\n\n      // Update the state with the new task order within the same column\n      setColumnsData({\n        ...columnsData,\n        [source.droppableId]: sourceTasks\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban\",\n      children: [/*#__PURE__*/_jsxDEV(KanbanColumn, {\n        id: \"open\",\n        tasks: columnsData.open\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KanbanColumn, {\n        id: \"ongoing\",\n        tasks: columnsData.ongoing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KanbanColumn, {\n        id: \"close\",\n        tasks: columnsData.close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Kanban, \"Q8Jg8V8+IT7FlzRVq7+ysTn1eUw=\");\n_c = Kanban;\nexport default Kanban;\nvar _c;\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"names":["React","useState","DragDropContext","KanbanColumn","jsxDEV","_jsxDEV","Kanban","_ref","_s","data","columnsData","setColumnsData","open","id","title","description","assignedTo","status","ongoing","close","onDragEnd","result","destination","source","draggableId","console","log","droppableId","index","sourceTasks","destinationTasks","draggedTask","error","splice","children","className","tasks","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/skyz-web-react-he/src/components/Kanban.js"],"sourcesContent":["// Kanban.js\r\nimport React, { useState } from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport \"../assets/scss/_kanban.scss\";\r\nimport KanbanColumn from \"./KanbanColumn\";\r\n\r\nconst Kanban = ({ data }) => {\r\n  const [columnsData, setColumnsData] = useState({\r\n    open: [\r\n      {\r\n        id: \"task-1\",\r\n        title: \"Task 1\",\r\n        description: \"Description for Task 1\",\r\n        assignedTo: \"User A\",\r\n        status: \"todo\",\r\n      },\r\n      // ... other tasks\r\n    ],\r\n    ongoing: [\r\n      {\r\n        id: \"task-2\",\r\n        title: \"Task 2\",\r\n        description: \"Description for Task 2\",\r\n        assignedTo: \"User B\",\r\n        status: \"inProgress\",\r\n      },\r\n      // ... other tasks\r\n    ],\r\n    close: [\r\n      {\r\n        id: \"task-3\",\r\n        title: \"Task 3\",\r\n        description: \"Description for Task 3\",\r\n        assignedTo: \"User C\",\r\n        status: \"done\",\r\n      },\r\n      // ... other tasks\r\n    ],\r\n  });\r\n  const onDragEnd = (result) => {\r\n  const { destination, source, draggableId } = result;\r\n\r\n  console.log(\"Drag Result:\", result);\r\n\r\n  // If there's no destination or the task was dropped back into its original position, do nothing\r\n  if (!destination || (destination.droppableId === source.droppableId && destination.index === source.index)) {\r\n    return;\r\n  }\r\n\r\n  // Get the task list for the source and destination columns\r\n  const sourceTasks = columnsData[source.droppableId];\r\n  const destinationTasks = columnsData[destination.droppableId];\r\n\r\n  // Log additional information for debugging\r\n  console.log(\"Source Tasks:\", sourceTasks);\r\n  console.log(\"Destination Tasks:\", destinationTasks);\r\n\r\n\r\n    if (!draggedTask) {\r\n      console.error(`Task with id ${draggableId} not found in source column.`);\r\n      return;\r\n    }\r\n\r\n    // If the destination column is different from the source column\r\n    if (destination.droppableId !== source.droppableId) {\r\n      // Remove the task from the source column\r\n      sourceTasks.splice(source.index, 1);\r\n\r\n      // Insert the task into the destination column at the specified index\r\n      destinationTasks.splice(destination.index, 0, draggedTask);\r\n\r\n      // Update the state with the new task order\r\n      setColumnsData({\r\n        ...columnsData,\r\n        [source.droppableId]: sourceTasks,\r\n        [destination.droppableId]: destinationTasks,\r\n      });\r\n    } else {\r\n      // If the destination column is the same as the source column, reordering within the same column\r\n      sourceTasks.splice(source.index, 1);\r\n      sourceTasks.splice(destination.index, 0, draggedTask);\r\n\r\n      // Update the state with the new task order within the same column\r\n      setColumnsData({\r\n        ...columnsData,\r\n        [source.droppableId]: sourceTasks,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div className=\"kanban\">\r\n        <KanbanColumn id=\"open\" tasks={columnsData.open} />\r\n        <KanbanColumn id=\"ongoing\" tasks={columnsData.ongoing} />\r\n        <KanbanColumn id=\"close\" tasks={columnsData.close} />\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default Kanban;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\skyz-web-react-he\\\\src\\\\components\\\\Kanban.js\";\n// import React, { useState } from \"react\";\n// import { DragDropContext } from \"react-beautiful-dnd\";\n// import \"../assets/scss/_kanban.scss\";\n// import KanbanColumn from \"./KanbanColumn\";\n\n// const Kanban = () => {\n//   const [tasks, setTasks] = useState({\n//     columnId: {\n//       title: \"Column 1\",\n//       taskIds: [\"task1\", \"task2\", \"task3\"],\n//     },\n//     columnId2: {\n//       title: \"Column 2\",\n//       taskIds: [\"task4\", \"task5\", \"task6\"],\n//     },\n//     columnId3: {\n//       title: \"Column 3\",\n//       taskIds: [\"task7\", \"task8\", \"task9\"],\n//     },\n//   });\n\n//   const onDragEnd = (result) => {\n//     const { destination, source, draggableId } = result;\n\n//     if (\n//       !destination ||\n//       (destination.droppableId === source.droppableId &&\n//         destination.index === source.index)\n//     ) {\n//       return;\n//     }\n\n//     const newTasks = { ...tasks };\n//     const sourceColumn = newTasks[source.droppableId];\n//     const destinationColumn = newTasks[destination.droppableId];\n\n//     sourceColumn.taskIds.splice(source.index, 1);\n//     destinationColumn.taskIds.splice(destination.index, 0, draggableId);\n\n//     setTasks(newTasks);\n//   };\n\n//   return (\n//     <DragDropContext onDragEnd={onDragEnd}>\n//       <div className=\"kanban\">\n//         <KanbanColumn columnId=\"columnId\" tasks={tasks} />\n//         <KanbanColumn columnId=\"columnId2\" tasks={tasks} />\n//         <KanbanColumn columnId=\"columnId3\" tasks={tasks} />\n//       </div>\n//     </DragDropContext>\n//   );\n// };\n\n// export default Kanban;\n\n// Board.js\nimport React from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport KanbanColumn from \"./KanbanColumn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Kanban = _ref => {\n  let {\n    columns,\n    tasks,\n    onDragEnd\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: columns.map(column => /*#__PURE__*/_jsxDEV(KanbanColumn, {\n        column: column,\n        tasks: tasks[column.id]\n      }, column.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_c = Kanban;\nexport default Kanban;\nvar _c;\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"names":["React","DragDropContext","KanbanColumn","jsxDEV","_jsxDEV","Kanban","_ref","columns","tasks","onDragEnd","children","style","display","map","column","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/skyz-web-react-he/src/components/Kanban.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { DragDropContext } from \"react-beautiful-dnd\";\r\n// import \"../assets/scss/_kanban.scss\";\r\n// import KanbanColumn from \"./KanbanColumn\";\r\n\r\n// const Kanban = () => {\r\n//   const [tasks, setTasks] = useState({\r\n//     columnId: {\r\n//       title: \"Column 1\",\r\n//       taskIds: [\"task1\", \"task2\", \"task3\"],\r\n//     },\r\n//     columnId2: {\r\n//       title: \"Column 2\",\r\n//       taskIds: [\"task4\", \"task5\", \"task6\"],\r\n//     },\r\n//     columnId3: {\r\n//       title: \"Column 3\",\r\n//       taskIds: [\"task7\", \"task8\", \"task9\"],\r\n//     },\r\n//   });\r\n\r\n//   const onDragEnd = (result) => {\r\n//     const { destination, source, draggableId } = result;\r\n\r\n//     if (\r\n//       !destination ||\r\n//       (destination.droppableId === source.droppableId &&\r\n//         destination.index === source.index)\r\n//     ) {\r\n//       return;\r\n//     }\r\n\r\n//     const newTasks = { ...tasks };\r\n//     const sourceColumn = newTasks[source.droppableId];\r\n//     const destinationColumn = newTasks[destination.droppableId];\r\n\r\n//     sourceColumn.taskIds.splice(source.index, 1);\r\n//     destinationColumn.taskIds.splice(destination.index, 0, draggableId);\r\n\r\n//     setTasks(newTasks);\r\n//   };\r\n\r\n//   return (\r\n//     <DragDropContext onDragEnd={onDragEnd}>\r\n//       <div className=\"kanban\">\r\n//         <KanbanColumn columnId=\"columnId\" tasks={tasks} />\r\n//         <KanbanColumn columnId=\"columnId2\" tasks={tasks} />\r\n//         <KanbanColumn columnId=\"columnId3\" tasks={tasks} />\r\n//       </div>\r\n//     </DragDropContext>\r\n//   );\r\n// };\r\n\r\n// export default Kanban;\r\n\r\n// Board.js\r\nimport React from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport KanbanColumn from \"./KanbanColumn\";\r\n\r\nconst Kanban = ({ columns, tasks, onDragEnd }) => {\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <div style={{ display: \"flex\" }}>\r\n        {columns.map((column) => (\r\n          <KanbanColumn\r\n            key={column.id}\r\n            column={column}\r\n            tasks={tasks[column.id]}\r\n          />\r\n        ))}\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default Kanban;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,qBAAqB;AACrD,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,MAAM,GAAGC,IAAA,IAAmC;EAAA,IAAlC;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAAH,IAAA;EAC3C,oBACEF,OAAA,CAACH,eAAe;IAACQ,SAAS,EAAEA,SAAU;IAAAC,QAAA,eACpCN,OAAA;MAAKO,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAF,QAAA,EAC7BH,OAAO,CAACM,GAAG,CAAEC,MAAM,iBAClBV,OAAA,CAACF,YAAY;QAEXY,MAAM,EAAEA,MAAO;QACfN,KAAK,EAAEA,KAAK,CAACM,MAAM,CAACC,EAAE;MAAE,GAFnBD,MAAM,CAACC,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGf,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEtB,CAAC;AAACC,EAAA,GAdIf,MAAM;AAgBZ,eAAeA,MAAM;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}